[["index.html", "记录R学习 前言 致谢", " 记录R学习 chz 2024-01-27 前言 啥，纯记录，码字，东西很多，很乱，需要根据需要寻找。第 1 章介绍了啥啥，第 2 章说了啥啥，然后是啥啥…… 我用了两个 R 包编译这本书，分别是 knitr (Xie 2015) 和 bookdown (Xie 2023)。以下是我的 R 进程信息： Code # sessionInfo() 致谢 非常感谢谁谁以及谁谁对我的帮助。艾玛，要不是他们神一样的队友，我两年前就写完这本书了。 张三 于 A 村某角落 参考文献 "],["author.html", "作者简介", " 作者简介 chz:曹华彰. 加粗 斜体 删除 斜体加粗的文字 蓝色 "],["plot.html", "第 1 章 Plots 1.1 箱线图/小提琴图 1.2 柱状图 1.3 点线图 1.4 树图 1.5 交互图 1.6 自定义 1.7 时间动态图 1.8 3D玫瑰 1.9 流程图 1.10 地图 1.11 ggtree", " 第 1 章 Plots 1.1 箱线图/小提琴图 Code library(plotly) library(gganimate) library(tidyverse) library(pedquant) library(leaflet) library(DiagrammeR) library(reshape2) Code p1&lt;-mtcars %&gt;% mutate(am=factor(am), vs=factor(vs)) %&gt;% ggplot(aes(x=vs,y=mpg,fill=am))+ geom_violin(col=&quot;white&quot;,trim = FALSE)+ geom_boxplot(width=.3,position=position_dodge(width=0.9))+ theme_bw()+theme(legend.position = c(0.15,0.85))+ guides(alpha=&#39;none&#39;)+ labs(x=&#39;Name of person&#39;,y=&#39;Heart rate&#39;,title = &quot;Performance on lie detector test&quot;)+ scale_fill_brewer(palette=&quot;Set2&quot;) p1 1.2 柱状图 Code mtcars %&gt;% count(vs,cyl) %&gt;% mutate(name=c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;)) %&gt;% mutate_at(c(&#39;vs&#39;,&#39;cyl&#39;),as.factor) %&gt;% ggplot(aes(x=vs,y=n,fill=cyl,label=name))+ geom_bar(stat = &quot;identity&quot;, position = &#39;fill&#39;,col=1)+ geom_text(aes(label=name),size=4,vjust=0.5,position = &#39;fill&#39;)+ scale_fill_brewer(palette=&quot;Set2&quot;)+ # scale_fill_manual(values = heat.colors(7))+ # scale_fill_manual(values = terrain.colors(7))+ labs(title=&quot;Facebook theme&quot;,caption = &quot;made by chz&quot;)+ theme_minimal()+ theme(plot.title = element_text(hjust = 0.5,#居中 vjust =0,#上下 color = &#39;red&#39;, face = &quot;italic&quot;) ) 1.3 点线图 Code dd&lt;-tibble(name=rep(letters[1:10],2),health=rnorm(20,10,1),time=rep(c(&#39;a&#39;,&#39;n&#39;),each=10)) dd%&gt;%ggplot(aes(x= health, y= name)) + geom_line(aes(group = name))+geom_point(aes(fill=time),shape = 21, size = 1)+ labs(title=&quot;Changes in health on time&quot;,x=&quot;health&quot;, y=&quot;name&quot;)+ theme(axis.text.y = element_text(size = 5)) 1.4 树图 Code library(ggplot2) library(treemapify) ggplot(G20, aes(area = gdp_mil_usd, fill = hdi,label = country)) + geom_treemap()+ geom_treemap_text(fontface = &quot;italic&quot;, colour = &quot;red&quot;, place = &quot;centre&quot;,grow = TRUE,alpha=.6)+ scale_fill_distiller(palette=&quot;Reds&quot;) Code # 其中place参数控制每一个方块中标签相对于四周的位置， # grow则控制标签是否与方块大小自适应（呈大致比例放大缩小） # 次级分组（亚群）： ggplot(G20, aes(area = gdp_mil_usd, fill = hdi, label = country,subgroup = region)) + geom_treemap() + geom_treemap_subgroup_border() + geom_treemap_subgroup_text(place = &quot;centre&quot;, grow = T, alpha = 0.8, colour =&quot;black&quot;, fontface = &quot;italic&quot;, min.size = 0) + geom_treemap_text(colour = &quot;red&quot;, place = &quot;topleft&quot;, reflow = T,alpha=.5)+ scale_fill_distiller(palette=&quot;Reds&quot;) 1.5 交互图 Code library(ggiraph) data &lt;- mtcars data$carname &lt;- row.names(data) gg_point = ggplot(data = data) + geom_point_interactive(aes(x = wt, y = qsec, color = disp, tooltip = carname, data_id = carname)) + theme_minimal() girafe(ggobj = gg_point) 1.6 自定义 Code library(magick) library(grid) library(ggplot2) # install.packages(&quot;palmerpenguins&quot;) library(palmerpenguins) p&lt;-ggplot(penguins,aes(x = species, y = body_mass_g)) + geom_violin(width=0.5,cex=1.2,aes(fill = species),alpha=0.5) + geom_boxplot(width=0.1,cex=1.2)+ geom_jitter(width = 0.2)+ scale_y_continuous(limits = c(2500,8000))+ theme_classic(base_size = 20) + scale_fill_manual(values = c(&quot;darkorange&quot;,&quot;purple&quot;,&quot;cyan4&quot;)) Code p image &lt;- image_read(&#39;www/lp_lh1.png&#39;) #magick包的函数读取图片 grid.raster(image, x=0.25, y=0.65, height=0.2) #grid包的函数，叠加图片到现有绘图上 image &lt;- image_read(&#39;www/lp_lh2.png&#39;) grid.raster(image, x=0.45, y=0.65, height=0.2) image &lt;- image_read(&#39;www/lh_2.png&#39;) grid.raster(image, x=0.65, y=0.85, height=0.2) Code library(png) #读取.png图片 library(jpeg) #读取jpeg图片 library(grid) library(ggimage) #ggplot2扩展包，配合ggplot2绘图 t=seq(0, 2*pi, by=0.2) x=16*sin(t)^3 y=13*cos(t)-5*cos(2*t)-2*cos(3*t)-cos(4*t) a=(x-min(x))/(max(x)-min(x)) b=(y-min(y))/(max(y)-min(y)) bg_img &lt;- image_read(&#39;www/xg1.png&#39;) bees &lt;- data_frame(x=a,y=b) bees$image &lt;- rep(c(&quot;www/lp_lh1.png&quot;,NA,&quot;www/lh_sm.png&quot;,NA),times=8) ggplot(data = bees, aes(x = x, y = y))+ theme_bw(base_size = 20)+ annotation_custom(rasterGrob(bg_img, width = unit(1,&quot;npc&quot;), height = unit(1,&quot;npc&quot;)), -Inf, Inf, -Inf, Inf)+ geom_image(aes(image = image), size = 0.1) 1.7 时间动态图 Code library(patchwork) mydat=tibble(a=rep(2000:2019,each=2),b=runif(40,1,100),c=sample(c(&#39;a&#39;,&#39;b&#39;),40,replace = T)) p1&lt;-ggplot(mydat,aes(x=a,y=b,col=c,group=c))+geom_line()+geom_point() p2&lt;-ggplot(mydat,aes(x=c,y=b,col=c,group=c))+geom_boxplot() pp&lt;-(p1/ plot_spacer())|p2 pp Code p1+transition_reveal(a) Code subplot(ggplotly(p1), ggplotly(p2), widths = c(.4, .6), titleY = TRUE, titleX = TRUE) %&gt;% layout(showlegend = FALSE) 1.8 3D玫瑰 http://www.rebeccabarter.com/blog/2017-04-20-interactive/ https://davidgohel.github.io/ggiraph/index.html Code x&lt;- seq(0, 24) /24 t &lt;- seq(0, 575, by = 0.5) / 575*20 *pi + 4 *pi grid &lt;- expand.grid(x = x, t = t) x &lt;- matrix(grid$x, ncol = 25, byrow = TRUE) t &lt;- matrix(grid$t, ncol = 25, byrow = TRUE) p&lt;- (pi/2)*exp(-t/(8*pi)) change &lt;- sin(15 * t) /150 u&lt;-1-(1-(3.6*t)%%(2*pi) /pi)^4/2+change y &lt;- 2*(x^2- x)^2* sin(p) r&lt;- u*(x*sin(p) +y *cos(p)) xx=r*cos(t) yy=r*sin(t) zz=u*(x*cos(p)-y*sin(p)) plot_ly(x = ~xx, y = ~yy, z = ~zz,color = ~zz, colors = &#39;Reds&#39;,opacity = 0.5)%&gt;% add_surface()-&gt;plot add_trace(plot,x=rep(0,4),y=rep(0,4),z=seq(-0.5,0,length=4), mode=&#39;lines&#39;, line = list(color = &#39;green&#39;, width = 8)) %&gt;% add_text(x=0,y=0,z=1,text=&quot;plot by chz&quot;,list(color = &#39;green&#39;, size = 8)) 1.9 流程图 Code library(DiagrammeR) grViz(&quot; digraph { # initiate graph graph [layout = dot, rankdir = LR, label = &#39;研究路线\\n\\n&#39;,labelloc = t] # global node settings node [shape = rectangle, style = filled, fillcolor = Linen] A[label = &#39;数据&#39;, shape = folder, fillcolor = Beige] B[label = &#39;预处理-\\n选取，整合变量&#39;] C[label = &#39;欠采样\\n 类别不平衡样本&#39;] D[label = &#39;朴素贝叶斯&#39;] E[label = &#39;逻辑回归&#39;] F[label = &#39;神经网络&#39;] G[label= &#39;gbm梯度提升&#39;] H[label= &#39;gbm提升模型\\n参数优化&#39;] P[label= &#39;1.准确率 \\n 2.重要性 \\n 3.ROC曲线&#39;] MOD[label= &#39;最终模型&#39;,fillcolor = Beige] blank1[label = &#39;&#39;, width = 0.01, height = 0.01] # A -&gt; blank1[dir=none]; # blank1 -&gt; B[minlen=10]; # {{ rank = same; blank1 B }} # blank1 -&gt; C # blank2[label = &#39;&#39;, width = 0.01, height = 0.01] # C -&gt; blank2[dir=none]; # blank2 -&gt; D[minlen=1]; # {{ rank = same; blank2 E }} # blank2 -&gt; E [minlen=10] A-&gt;B {{ rank = same; A B }} B-&gt;C C-&gt;{D,E,F,G} {D,E,F,G}-&gt;P subgraph cluster_modules { label = &#39;模型构建&#39; color = red style = dashed # connect moderator to module 4 {D,E,F,G} } P-&gt;H subgraph cluster_moderator { label = &#39;模型评估&#39; color = red style = dashed P} H-&gt;MOD {{ rank = same;H MOD }} } &quot;) 现在我们可以试试 bookdown 的一些初级功能了，例如图表。图 1.1 是一幅无趣的散点图，表 1.1 是一份枯燥的数据。 Code par(mar = c(4, 4, 1, .1)) plot(cars, pch = 19) 图 1.1: 雷猴啊，散点图！ Code knitr::kable( head(iris), caption = &#39;雷猴啊，iris 数据！&#39;, booktabs = TRUE ) 表 1.1: 雷猴啊，iris 数据！ Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 1.10 地图 leaflet 1.10.1 天心区 地图学习 Code df &lt;- sp::SpatialPointsDataFrame( cbind( (runif(4,-0.5,0.5))/2 + 112.99, # lng (runif(4,-0.5,0.5))/2 + 28.11 # lat ), data.frame(type = factor( rep(c(&quot;pirate&quot;, &quot;ship&quot;),2), c(&quot;ship&quot;, &quot;pirate&quot;) )) ) oceanIcons &lt;- iconList( ship = makeIcon(iconUrl = &quot;www/lp_lh1.png&quot;, iconWidth =50, iconHeight = 50), pirate = makeIcon(iconUrl = &quot;www/lp_lh2.png&quot;, iconWidth =50, iconHeight = 50) ) Code m&lt;-leaflet() %&gt;% addTiles(group = &quot;OSM (default)&quot;) %&gt;% setView(112.99, 28.11, zoom = 10) %&gt;% addMarkers(112.99, 28.11, popup=&quot;The birthplace of R&quot;, group = &quot;1&quot;) %&gt;% addCircleMarkers(112.99, 28.11,radius = 10, color = c(&#39;red&#39;), group = &quot;2&quot;) %&gt;% addCircles(112.99, 28.11,weight = 3,radius = 10000, color = c(&#39;red&#39;),group = &quot;3&quot;) %&gt;% addRectangles( lng1=113.2, lat1=28.3,lng2=112.8, lat2=27.9,fillColor = &quot;yellow&quot;,group = &quot;4&quot;) %&gt;% addMarkers(data=df,icon = ~oceanIcons[type],clusterOptions = markerClusterOptions(),group = &quot;5&quot;) %&gt;% addLayersControl( baseGroups = c(&quot;OSM (default)&quot;), overlayGroups = c(&quot;1&quot;, &quot;2&quot;,&quot;3&quot;, &quot;4&quot;,&quot;5&quot;), options = layersControlOptions(collapsed = T,autoZIndex = TRUE) ) m 1.10.2 北京 Code library(leaflet) # install.packages(&quot;leafletCN&quot;) library(leafletCN) # 提供 geojsonMap 函数 dat &lt;- data.frame(name = regionNames(&quot;china&quot;), value = runif(34)) # 还有很多其他参数设置，类似 leaflet::leaflet geojsonMap(dat, mapName = &quot;china&quot;, palette = &quot;RdBu&quot;, colorMethod = &quot;bin&quot;) Code dat &lt;- data.frame(name = regionNames(&quot;北京&quot;), value = runif(18)) geojsonMap(dat, mapName = &quot;北京&quot;, palette = &quot;RdBu&quot;, colorMethod = &quot;bin&quot;) Code dat &lt;- data.frame(name = regionNames(&quot;邵阳&quot;), value = runif(12)) geojsonMap(dat, mapName = &quot;邵阳&quot;, palette = &quot;RdBu&quot;, colorMethod = &quot;bin&quot;) 1.10.3 省区地图 Code library(sf) load(&#39;data/chinamap.RData&#39;) shaoyang_map &lt;- china_map[china_map$NAME_1 == &quot;Hunan&quot; &amp; china_map$NAME_2 == &quot;Shaoyang&quot;, ] plot(shaoyang_map[&quot;NAME_3&quot;], main = &quot;&quot;, key.pos = NULL) Code pal=colorFactor(palette=&#39;YlOrRd&#39;,shaoyang_map$NAME_3) leaflet(shaoyang_map) %&gt;% addPolygons(color = &quot;#444444&quot;, weight = 1, smoothFactor = 0.5, opacity = 1.0, fillOpacity = 0.5, fillColor = ~pal(NAME_3), highlightOptions = highlightOptions(color = &quot;white&quot;, weight = 2, bringToFront = TRUE)) 1.11 ggtree Code library(&quot;treeio&quot;) library(&quot;ggtree&quot;) library(&quot;ggplot2&quot;) rtree is a simple and convenient way to generate a tree Code # read example data set.seed(2023) tree &lt;- rtree(50) ggtree used to visualize the organized tree This is the most basic diagram, containing only structural information,the root node is on the left, and the children are on the right. Code # plot ggtree(tree) 1.11.1 More forms of phylogenetic tree Arguments in function Its arguments can be divided into three categories: data arguments, plotting arguments, and theme arguments. Here, I pick a few important parameters: tree: A required argument that specifies the evolutionary tree object. layout: An optional argument that specifies the layout of the evolutionary tree. branch.length: An optional argument that specifies whether to display the branch lengths. layout.legend.position: An optional argument that specifies the position of the legend. The default is “right”. geom_tiplab for adding taxa label geom_nodepoint(), geom_tippoint() for adding nodes Try to change some arguments The ggtree package inherits the advantages of ggplot2. Users can change the color, size, and type of the lines as we do with ggplot2. Code # change lines type ggtree(tree, color = &quot;blue&quot;, size = 0.4, linetype = &quot;dashed&quot;) Code # tree without ladder structure ggtree(tree, ladderize = FALSE) Code # tree with same length branches ggtree(tree, branch.length = &quot;none&quot;) Code # reverse coordinate ggtree(tree) + coord_flip() We also can specify the layouts style of tree. Code p1=ggtree(tree, layout = &#39;circular&#39;, branch.length = &#39;none&#39;) p2=ggtree(tree, layout= &quot;ellipse&quot;) p3=ggtree(tree, layout = &quot;equal_angle&quot;) p1+p2+p3 Displaying nodes and labels The labels on the nodes, each label representing an individual. Code # add nodes ggtree(tree, layout = &#39;circular&#39;, branch.length = &#39;none&#39;) + geom_nodepoint(color=&quot;#63E2DE&quot;, alpha=0.4, size=4) + geom_tippoint(color=&quot;#72AEEF&quot;, shape=8, size=1) Code # add lables ggtree(tree, layout=&quot;circular&quot;, branch.length = &#39;none&#39;) + geom_tiplab(aes(angle=angle), color=&#39;blue&#39;) 1.11.2 run with another dataset In Yu’s book, he introduced ggtree for Phylogenetic Tree Objects. I chose to study iris data from R built-in data. Data:iris This famous (Fisher’s or Anderson’s) iris data set gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.(from help documentation of iris) Code head(iris,3) ## Sepal.Length Sepal.Width Petal.Length Petal.Width ## 1 5.1 3.5 1.4 0.2 ## 2 4.9 3.0 1.4 0.2 ## 3 4.7 3.2 1.3 0.2 ## Species ## 1 setosa ## 2 setosa ## 3 setosa The data contain one hundred fifty flowers and four characteristic variables and an indicator of a flower category Code dim(iris) ## [1] 150 5 hclust: Hierarchical clustering combines samples continuously according to the distance between them, and its results are similar to the dendrogram in our study Code mydata=iris[,-5] # Calculate the distance of the four features and then cluster analysis hc &lt;-mydata %&gt;% dist() %&gt;% hclust hc ## ## Call: ## hclust(d = .) ## ## Cluster method : complete ## Distance : euclidean ## Number of objects: 150 Code # The hclust object describes the tree produced by the clustering process. # It can be converted to dendrogram object, which stores the tree as deeply-nested lists. den &lt;- as.dendrogram(hc) den ## &#39;dendrogram&#39; with 2 branches and 150 members total, at height 7.085 Code # The results are divided into three categories, considering that we have three species clus &lt;- cutree(hc, 3) g &lt;- split(1:length(clus), clus) # plot a simple graph by ggtree p &lt;- ggtree(hc,size = 0.5,linetype=6) clades &lt;- sapply(g, function(n) MRCA(p, n)) # groupClade:The color of the branches is displayed according to the classification results # This is based on the results of cluster analysis, # the samples on the same color branches have similar characteristics p &lt;- groupClade(p, clades, group_name=&#39;group&#39;) + aes(color=group) p Code # labs can write the unique label of the sample, # but this data set does not, because the sample is a lot of flowers, # we do not consider a single individual, # but like in our study of city level classification, we can write lab. d &lt;- data.frame(label =c(1:nrow(iris)), Species = iris[,&quot;Species&quot;]) layout_dendrogram() to layout the tree top-down, and theme_dendrogram() to display tree height. %&lt;+%be similar to %&gt;% geom_tippoint:Sets the shape and color of the end node Code p&lt;-p %&lt;+% d + layout_dendrogram() + geom_tippoint(aes(fill=Species, x=x+.5), size=2, shape=21, color=&#39;black&#39;)+ geom_tiplab(aes(label=Species), cex=0.5,size=1, hjust=.5, color=&#39;black&#39;) + geom_tiplab(angle=90, hjust=1, cex=0.5,size=1, offset=-2, show.legend=FALSE) + scale_color_brewer(palette=&#39;Set1&#39;, breaks=1:4) + theme_dendrogram(plot.margin=margin(6,6,80,6)) + theme(legend.position=c(.95, .75), legend.background = element_rect( size = 0.2 ),legend.text=element_text(size=2), legend.title=element_text(size=2))+labs(title = &quot;Dendrogram of the clustering results&quot;) p theme_tree: Add background,may Green Be Good for your eyesight? Code p+theme_tree(&quot;darkseagreen3&quot;) Do it by another way Code p=ggtree(hc,size = 0.8,linetype=&#39;dashed&#39;, layout=&quot;circular&quot;) %&gt;% groupClade(clades, group_name=&#39;group&#39;) + aes(color=group) p&lt;-p %&lt;+% d + geom_tippoint(aes(fill=Species, x=x+.5), size=2, shape=21, color=&#39;black&#39;)+geom_tiplab(aes(label=Species), cex=0.8,size=1, hjust=.5, color=&#39;black&#39;) + geom_tiplab(angle=90, hjust=1, cex=0.5,size=2, offset=-2, show.legend=FALSE) + scale_color_brewer(palette=&#39;Set1&#39;, breaks=1:4) + theme_dendrogram(plot.margin=margin(6,6,80,6)) + theme(legend.position=c(.95, .75), legend.background = element_rect( size = 0.5 ),legend.text=element_text(size=5), legend.title=element_text(size=5))+labs(title = &quot;Dendrogram of the clustering results&quot;)+theme_tree(&quot;#FEE4E9&quot;) p "],["tab.html", "第 2 章 table 2.1 gt表 2.2 flextable 2.3 stargazer 2.4 可查询表格", " 第 2 章 table 2.1 gt表 Code library(tidyverse) library(gt) library(gtExtras) 学习gt表网站 2.1.1 表格1 Code mtcars %&gt;% head() %&gt;% gt() %&gt;% gt_theme_538() @import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"); @import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"); @import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"); @import url(\"https://fonts.googleapis.com/css2?family=Cairo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"); #nxijzcuade table { font-family: Cairo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #nxijzcuade thead, #nxijzcuade tbody, #nxijzcuade tfoot, #nxijzcuade tr, #nxijzcuade td, #nxijzcuade th { border-style: none; } #nxijzcuade p { margin: 0; padding: 0; } #nxijzcuade .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: 400; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: none; border-top-width: 3px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nxijzcuade .gt_caption { padding-top: 4px; padding-bottom: 4px; } #nxijzcuade .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nxijzcuade .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #nxijzcuade .gt_heading { background-color: #FFFFFF; text-align: left; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nxijzcuade .gt_bottom_border { border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nxijzcuade .gt_col_headings { border-top-style: none; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nxijzcuade .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nxijzcuade .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nxijzcuade .gt_column_spanner_outer:first-child { padding-left: 0; } #nxijzcuade .gt_column_spanner_outer:last-child { padding-right: 0; } #nxijzcuade .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #000000; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nxijzcuade .gt_spanner_row { border-bottom-style: hidden; } #nxijzcuade .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: none; border-top-width: 2px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #nxijzcuade .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: none; border-top-width: 2px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #FFFFFF; vertical-align: middle; } #nxijzcuade .gt_from_md > :first-child { margin-top: 0; } #nxijzcuade .gt_from_md > :last-child { margin-bottom: 0; } #nxijzcuade .gt_row { padding-top: 3px; padding-bottom: 3px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nxijzcuade .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 0px; border-right-color: #FFFFFF; padding-left: 5px; padding-right: 5px; } #nxijzcuade .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #nxijzcuade .gt_row_group_first td { border-top-width: 2px; } #nxijzcuade .gt_row_group_first th { border-top-width: 2px; } #nxijzcuade .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nxijzcuade .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #nxijzcuade .gt_first_summary_row.thick { border-top-width: 2px; } #nxijzcuade .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nxijzcuade .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nxijzcuade .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nxijzcuade .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #nxijzcuade .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nxijzcuade .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nxijzcuade .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nxijzcuade .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nxijzcuade .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nxijzcuade .gt_sourcenote { font-size: 12px; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #nxijzcuade .gt_left { text-align: left; } #nxijzcuade .gt_center { text-align: center; } #nxijzcuade .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nxijzcuade .gt_font_normal { font-weight: normal; } #nxijzcuade .gt_font_bold { font-weight: bold; } #nxijzcuade .gt_font_italic { font-style: italic; } #nxijzcuade .gt_super { font-size: 65%; } #nxijzcuade .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #nxijzcuade .gt_asterisk { font-size: 100%; vertical-align: 0; } #nxijzcuade .gt_indent_1 { text-indent: 5px; } #nxijzcuade .gt_indent_2 { text-indent: 10px; } #nxijzcuade .gt_indent_3 { text-indent: 15px; } #nxijzcuade .gt_indent_4 { text-indent: 20px; } #nxijzcuade .gt_indent_5 { text-indent: 25px; } tbody tr:last-child { border-bottom: 2px solid #ffffff00; } mpg cyl disp hp drat wt qsec vs am gear carb 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 2.1.2 表格2 Code mtcars %&gt;% head() %&gt;% gt() %&gt;% gt_theme_espn() %&gt;% # gt_theme_nytimes() %&gt;% tab_header(title = &quot;ESPN 风格表格&quot;) @import url(\"https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"); #khiwwrrrji table { font-family: Lato, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #khiwwrrrji thead, #khiwwrrrji tbody, #khiwwrrrji tfoot, #khiwwrrrji tr, #khiwwrrrji td, #khiwwrrrji th { border-style: none; } #khiwwrrrji p { margin: 0; padding: 0; } #khiwwrrrji .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 3px; border-top-color: #FFFFFF; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #khiwwrrrji .gt_caption { padding-top: 4px; padding-bottom: 4px; } #khiwwrrrji .gt_title { color: #333333; font-size: 24px; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #khiwwrrrji .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #khiwwrrrji .gt_heading { background-color: #FFFFFF; text-align: left; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #khiwwrrrji .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #khiwwrrrji .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #khiwwrrrji .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 80%; font-weight: bolder; text-transform: uppercase; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #khiwwrrrji .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 80%; font-weight: bolder; text-transform: uppercase; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #khiwwrrrji .gt_column_spanner_outer:first-child { padding-left: 0; } #khiwwrrrji .gt_column_spanner_outer:last-child { padding-right: 0; } #khiwwrrrji .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #khiwwrrrji .gt_spanner_row { border-bottom-style: hidden; } #khiwwrrrji .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 80%; font-weight: bolder; text-transform: uppercase; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #khiwwrrrji .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 80%; font-weight: bolder; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #khiwwrrrji .gt_from_md > :first-child { margin-top: 0; } #khiwwrrrji .gt_from_md > :last-child { margin-bottom: 0; } #khiwwrrrji .gt_row { padding-top: 7px; padding-bottom: 7px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #F6F7F7; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #khiwwrrrji .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 80%; font-weight: bolder; text-transform: uppercase; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #khiwwrrrji .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #khiwwrrrji .gt_row_group_first td { border-top-width: 2px; } #khiwwrrrji .gt_row_group_first th { border-top-width: 2px; } #khiwwrrrji .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #khiwwrrrji .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #khiwwrrrji .gt_first_summary_row.thick { border-top-width: 2px; } #khiwwrrrji .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #khiwwrrrji .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #khiwwrrrji .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #khiwwrrrji .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #khiwwrrrji .gt_striped { background-color: #FAFAFA; } #khiwwrrrji .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #khiwwrrrji .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #khiwwrrrji .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #khiwwrrrji .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #khiwwrrrji .gt_sourcenote { font-size: 12px; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #khiwwrrrji .gt_left { text-align: left; } #khiwwrrrji .gt_center { text-align: center; } #khiwwrrrji .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #khiwwrrrji .gt_font_normal { font-weight: normal; } #khiwwrrrji .gt_font_bold { font-weight: bold; } #khiwwrrrji .gt_font_italic { font-style: italic; } #khiwwrrrji .gt_super { font-size: 65%; } #khiwwrrrji .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #khiwwrrrji .gt_asterisk { font-size: 100%; vertical-align: 0; } #khiwwrrrji .gt_indent_1 { text-indent: 5px; } #khiwwrrrji .gt_indent_2 { text-indent: 10px; } #khiwwrrrji .gt_indent_3 { text-indent: 15px; } #khiwwrrrji .gt_indent_4 { text-indent: 20px; } #khiwwrrrji .gt_indent_5 { text-indent: 25px; } ESPN 风格表格 mpg cyl disp hp drat wt qsec vs am gear carb 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 2.1.3 颜色表格 高亮行 高亮 mpg, wt 列的 1-5 行。 gt_highlight_rows Code mtcars %&gt;% head() %&gt;% gt() %&gt;% gt_highlight_cols(c(cyl, vs:carb), fill = &quot;lightblue&quot;, alpha = .5)%&gt;% gt_highlight_rows(1:5, columns = c(mpg, wt)) %&gt;% gt_color_rows(hp,palette = &quot;ggsci::blue_material&quot;) #knvcuonmky table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #knvcuonmky thead, #knvcuonmky tbody, #knvcuonmky tfoot, #knvcuonmky tr, #knvcuonmky td, #knvcuonmky th { border-style: none; } #knvcuonmky p { margin: 0; padding: 0; } #knvcuonmky .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #knvcuonmky .gt_caption { padding-top: 4px; padding-bottom: 4px; } #knvcuonmky .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #knvcuonmky .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #knvcuonmky .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #knvcuonmky .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #knvcuonmky .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #knvcuonmky .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #knvcuonmky .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #knvcuonmky .gt_column_spanner_outer:first-child { padding-left: 0; } #knvcuonmky .gt_column_spanner_outer:last-child { padding-right: 0; } #knvcuonmky .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #knvcuonmky .gt_spanner_row { border-bottom-style: hidden; } #knvcuonmky .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #knvcuonmky .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #knvcuonmky .gt_from_md > :first-child { margin-top: 0; } #knvcuonmky .gt_from_md > :last-child { margin-bottom: 0; } #knvcuonmky .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #knvcuonmky .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #knvcuonmky .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #knvcuonmky .gt_row_group_first td { border-top-width: 2px; } #knvcuonmky .gt_row_group_first th { border-top-width: 2px; } #knvcuonmky .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #knvcuonmky .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #knvcuonmky .gt_first_summary_row.thick { border-top-width: 2px; } #knvcuonmky .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #knvcuonmky .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #knvcuonmky .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #knvcuonmky .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #knvcuonmky .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #knvcuonmky .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #knvcuonmky .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #knvcuonmky .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #knvcuonmky .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #knvcuonmky .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #knvcuonmky .gt_left { text-align: left; } #knvcuonmky .gt_center { text-align: center; } #knvcuonmky .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #knvcuonmky .gt_font_normal { font-weight: normal; } #knvcuonmky .gt_font_bold { font-weight: bold; } #knvcuonmky .gt_font_italic { font-style: italic; } #knvcuonmky .gt_super { font-size: 65%; } #knvcuonmky .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #knvcuonmky .gt_asterisk { font-size: 100%; vertical-align: 0; } #knvcuonmky .gt_indent_1 { text-indent: 5px; } #knvcuonmky .gt_indent_2 { text-indent: 10px; } #knvcuonmky .gt_indent_3 { text-indent: 15px; } #knvcuonmky .gt_indent_4 { text-indent: 20px; } #knvcuonmky .gt_indent_5 { text-indent: 25px; } mpg cyl disp hp drat wt qsec vs am gear carb 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1 Code #palette = c(&quot;darkred&quot;, &quot;orange&quot;) 2.1.4 增加图像 Code mtcars %&gt;% select(cyl:wt, mpg) %&gt;% head() %&gt;% gt() %&gt;% gt_plt_bar(column = mpg, keep_column = TRUE, width = 35) #acqlkdtids table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #acqlkdtids thead, #acqlkdtids tbody, #acqlkdtids tfoot, #acqlkdtids tr, #acqlkdtids td, #acqlkdtids th { border-style: none; } #acqlkdtids p { margin: 0; padding: 0; } #acqlkdtids .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #acqlkdtids .gt_caption { padding-top: 4px; padding-bottom: 4px; } #acqlkdtids .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #acqlkdtids .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #acqlkdtids .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #acqlkdtids .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acqlkdtids .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #acqlkdtids .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #acqlkdtids .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #acqlkdtids .gt_column_spanner_outer:first-child { padding-left: 0; } #acqlkdtids .gt_column_spanner_outer:last-child { padding-right: 0; } #acqlkdtids .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #acqlkdtids .gt_spanner_row { border-bottom-style: hidden; } #acqlkdtids .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #acqlkdtids .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #acqlkdtids .gt_from_md > :first-child { margin-top: 0; } #acqlkdtids .gt_from_md > :last-child { margin-bottom: 0; } #acqlkdtids .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #acqlkdtids .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #acqlkdtids .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #acqlkdtids .gt_row_group_first td { border-top-width: 2px; } #acqlkdtids .gt_row_group_first th { border-top-width: 2px; } #acqlkdtids .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #acqlkdtids .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #acqlkdtids .gt_first_summary_row.thick { border-top-width: 2px; } #acqlkdtids .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acqlkdtids .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #acqlkdtids .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #acqlkdtids .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #acqlkdtids .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #acqlkdtids .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #acqlkdtids .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #acqlkdtids .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #acqlkdtids .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #acqlkdtids .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #acqlkdtids .gt_left { text-align: left; } #acqlkdtids .gt_center { text-align: center; } #acqlkdtids .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #acqlkdtids .gt_font_normal { font-weight: normal; } #acqlkdtids .gt_font_bold { font-weight: bold; } #acqlkdtids .gt_font_italic { font-style: italic; } #acqlkdtids .gt_super { font-size: 65%; } #acqlkdtids .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #acqlkdtids .gt_asterisk { font-size: 100%; vertical-align: 0; } #acqlkdtids .gt_indent_1 { text-indent: 5px; } #acqlkdtids .gt_indent_2 { text-indent: 10px; } #acqlkdtids .gt_indent_3 { text-indent: 15px; } #acqlkdtids .gt_indent_4 { text-indent: 20px; } #acqlkdtids .gt_indent_5 { text-indent: 25px; } cyl disp hp drat wt mpg mpg 6 160 110 3.90 2.620 21.0 6 160 110 3.90 2.875 21.0 4 108 93 3.85 2.320 22.8 6 258 110 3.08 3.215 21.4 8 360 175 3.15 3.440 18.7 6 225 105 2.76 3.460 18.1 Code mtcars %&gt;% head() %&gt;% select(cyl, mpg) %&gt;% mutate(mpg_pct_max = round(mpg/max(mpg) * 100, digits = 2), mpg_scaled = mpg/max(mpg) * 100) %&gt;% mutate(mpg_unscaled = mpg) %&gt;% gt() %&gt;% gt_plt_bar_pct(column = mpg_scaled, scaled = TRUE) %&gt;% gt_plt_bar_pct(column = mpg_unscaled, scaled = FALSE, fill = &quot;blue&quot;, background = &quot;lightblue&quot;) %&gt;% cols_align(&quot;center&quot;, contains(&quot;scale&quot;)) %&gt;% cols_width(4 ~ px(125), 5 ~ px(125)) #xqehjewqqj table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #xqehjewqqj thead, #xqehjewqqj tbody, #xqehjewqqj tfoot, #xqehjewqqj tr, #xqehjewqqj td, #xqehjewqqj th { border-style: none; } #xqehjewqqj p { margin: 0; padding: 0; } #xqehjewqqj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xqehjewqqj .gt_caption { padding-top: 4px; padding-bottom: 4px; } #xqehjewqqj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xqehjewqqj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #xqehjewqqj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xqehjewqqj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xqehjewqqj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xqehjewqqj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xqehjewqqj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xqehjewqqj .gt_column_spanner_outer:first-child { padding-left: 0; } #xqehjewqqj .gt_column_spanner_outer:last-child { padding-right: 0; } #xqehjewqqj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xqehjewqqj .gt_spanner_row { border-bottom-style: hidden; } #xqehjewqqj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #xqehjewqqj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xqehjewqqj .gt_from_md > :first-child { margin-top: 0; } #xqehjewqqj .gt_from_md > :last-child { margin-bottom: 0; } #xqehjewqqj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xqehjewqqj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #xqehjewqqj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #xqehjewqqj .gt_row_group_first td { border-top-width: 2px; } #xqehjewqqj .gt_row_group_first th { border-top-width: 2px; } #xqehjewqqj .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xqehjewqqj .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #xqehjewqqj .gt_first_summary_row.thick { border-top-width: 2px; } #xqehjewqqj .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xqehjewqqj .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xqehjewqqj .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xqehjewqqj .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #xqehjewqqj .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xqehjewqqj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xqehjewqqj .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xqehjewqqj .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xqehjewqqj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xqehjewqqj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xqehjewqqj .gt_left { text-align: left; } #xqehjewqqj .gt_center { text-align: center; } #xqehjewqqj .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xqehjewqqj .gt_font_normal { font-weight: normal; } #xqehjewqqj .gt_font_bold { font-weight: bold; } #xqehjewqqj .gt_font_italic { font-style: italic; } #xqehjewqqj .gt_super { font-size: 65%; } #xqehjewqqj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #xqehjewqqj .gt_asterisk { font-size: 100%; vertical-align: 0; } #xqehjewqqj .gt_indent_1 { text-indent: 5px; } #xqehjewqqj .gt_indent_2 { text-indent: 10px; } #xqehjewqqj .gt_indent_3 { text-indent: 15px; } #xqehjewqqj .gt_indent_4 { text-indent: 20px; } #xqehjewqqj .gt_indent_5 { text-indent: 25px; } cyl mpg mpg_pct_max mpg_scaled mpg_unscaled 6 21.0 92.11 6 21.0 92.11 4 22.8 100.00 6 21.4 93.86 8 18.7 82.02 6 18.1 79.39 2.1.5 自定义图片 Code a=tibble(a=c(1:5),who=paste0(&#39;lp&#39;,1:5)) png&lt;-paste0(&quot;./www/&quot;,list.files(&quot;./www&quot;,pattern = &quot;.png&quot;)) a$c=png[1:5] a$d=png[6:10] a%&gt;% gt(groupname_col = &quot;team_conf&quot;) %&gt;% gt_img_rows(c) %&gt;% gt_img_rows(d) #kmsstfpdrd table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #kmsstfpdrd thead, #kmsstfpdrd tbody, #kmsstfpdrd tfoot, #kmsstfpdrd tr, #kmsstfpdrd td, #kmsstfpdrd th { border-style: none; } #kmsstfpdrd p { margin: 0; padding: 0; } #kmsstfpdrd .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #kmsstfpdrd .gt_caption { padding-top: 4px; padding-bottom: 4px; } #kmsstfpdrd .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #kmsstfpdrd .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #kmsstfpdrd .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kmsstfpdrd .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmsstfpdrd .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #kmsstfpdrd .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #kmsstfpdrd .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #kmsstfpdrd .gt_column_spanner_outer:first-child { padding-left: 0; } #kmsstfpdrd .gt_column_spanner_outer:last-child { padding-right: 0; } #kmsstfpdrd .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #kmsstfpdrd .gt_spanner_row { border-bottom-style: hidden; } #kmsstfpdrd .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #kmsstfpdrd .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #kmsstfpdrd .gt_from_md > :first-child { margin-top: 0; } #kmsstfpdrd .gt_from_md > :last-child { margin-bottom: 0; } #kmsstfpdrd .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #kmsstfpdrd .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #kmsstfpdrd .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #kmsstfpdrd .gt_row_group_first td { border-top-width: 2px; } #kmsstfpdrd .gt_row_group_first th { border-top-width: 2px; } #kmsstfpdrd .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kmsstfpdrd .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #kmsstfpdrd .gt_first_summary_row.thick { border-top-width: 2px; } #kmsstfpdrd .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmsstfpdrd .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #kmsstfpdrd .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #kmsstfpdrd .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #kmsstfpdrd .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #kmsstfpdrd .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #kmsstfpdrd .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kmsstfpdrd .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kmsstfpdrd .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #kmsstfpdrd .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #kmsstfpdrd .gt_left { text-align: left; } #kmsstfpdrd .gt_center { text-align: center; } #kmsstfpdrd .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #kmsstfpdrd .gt_font_normal { font-weight: normal; } #kmsstfpdrd .gt_font_bold { font-weight: bold; } #kmsstfpdrd .gt_font_italic { font-style: italic; } #kmsstfpdrd .gt_super { font-size: 65%; } #kmsstfpdrd .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #kmsstfpdrd .gt_asterisk { font-size: 100%; vertical-align: 0; } #kmsstfpdrd .gt_indent_1 { text-indent: 5px; } #kmsstfpdrd .gt_indent_2 { text-indent: 10px; } #kmsstfpdrd .gt_indent_3 { text-indent: 15px; } #kmsstfpdrd .gt_indent_4 { text-indent: 20px; } #kmsstfpdrd .gt_indent_5 { text-indent: 25px; } a who c d 1 lp1 2 lp2 3 lp3 4 lp4 5 lp5 Code # gt_merge_stack(col1 = team_nick, col2 = team_division) %&gt;% 2.1.6 美元 Code start_date &lt;- &quot;2010-06-07&quot; end_date &lt;- &quot;2010-06-14&quot; sp500 |&gt; dplyr::filter(date &gt;= start_date &amp; date &lt;= end_date) |&gt; dplyr::select(-adj_close) |&gt; gt() |&gt; tab_header( title = &quot;S&amp;P 500&quot;, subtitle = glue::glue(&quot;{start_date} to {end_date}&quot;) ) |&gt; fmt_currency() |&gt; fmt_date(columns = date, date_style = &quot;wd_m_day_year&quot;) |&gt; fmt_number(columns = volume, suffixing = TRUE) #obpugurpft table { font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } #obpugurpft thead, #obpugurpft tbody, #obpugurpft tfoot, #obpugurpft tr, #obpugurpft td, #obpugurpft th { border-style: none; } #obpugurpft p { margin: 0; padding: 0; } #obpugurpft .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #obpugurpft .gt_caption { padding-top: 4px; padding-bottom: 4px; } #obpugurpft .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #obpugurpft .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #obpugurpft .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #obpugurpft .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #obpugurpft .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #obpugurpft .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #obpugurpft .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #obpugurpft .gt_column_spanner_outer:first-child { padding-left: 0; } #obpugurpft .gt_column_spanner_outer:last-child { padding-right: 0; } #obpugurpft .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #obpugurpft .gt_spanner_row { border-bottom-style: hidden; } #obpugurpft .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; } #obpugurpft .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #obpugurpft .gt_from_md > :first-child { margin-top: 0; } #obpugurpft .gt_from_md > :last-child { margin-bottom: 0; } #obpugurpft .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #obpugurpft .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #obpugurpft .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #obpugurpft .gt_row_group_first td { border-top-width: 2px; } #obpugurpft .gt_row_group_first th { border-top-width: 2px; } #obpugurpft .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #obpugurpft .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #obpugurpft .gt_first_summary_row.thick { border-top-width: 2px; } #obpugurpft .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #obpugurpft .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #obpugurpft .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #obpugurpft .gt_last_grand_summary_row_top { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: double; border-bottom-width: 6px; border-bottom-color: #D3D3D3; } #obpugurpft .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #obpugurpft .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #obpugurpft .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #obpugurpft .gt_footnote { margin: 0px; font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #obpugurpft .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #obpugurpft .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #obpugurpft .gt_left { text-align: left; } #obpugurpft .gt_center { text-align: center; } #obpugurpft .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #obpugurpft .gt_font_normal { font-weight: normal; } #obpugurpft .gt_font_bold { font-weight: bold; } #obpugurpft .gt_font_italic { font-style: italic; } #obpugurpft .gt_super { font-size: 65%; } #obpugurpft .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; } #obpugurpft .gt_asterisk { font-size: 100%; vertical-align: 0; } #obpugurpft .gt_indent_1 { text-indent: 5px; } #obpugurpft .gt_indent_2 { text-indent: 10px; } #obpugurpft .gt_indent_3 { text-indent: 15px; } #obpugurpft .gt_indent_4 { text-indent: 20px; } #obpugurpft .gt_indent_5 { text-indent: 25px; } S&amp;P 500 2010-06-07 to 2010-06-14 date open high low close volume Mon, Jun 14, 2010 $1,095.00 $1,105.91 $1,089.03 $1,089.63 4.43B Fri, Jun 11, 2010 $1,082.65 $1,092.25 $1,077.12 $1,091.60 4.06B Thu, Jun 10, 2010 $1,058.77 $1,087.85 $1,058.77 $1,086.84 5.14B Wed, Jun 9, 2010 $1,062.75 $1,077.74 $1,052.25 $1,055.69 5.98B Tue, Jun 8, 2010 $1,050.81 $1,063.15 $1,042.17 $1,062.00 6.19B Mon, Jun 7, 2010 $1,065.84 $1,071.36 $1,049.86 $1,050.47 5.47B 2.2 flextable Code library(flextable) cars %&gt;% flextable::as_flextable() .cl-973180b0{}.cl-972e2136{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-972e214a{font-family:'Helvetica';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(153, 153, 153, 1.00);background-color:transparent;}.cl-972f84a4{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-972f84a5{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-972f8e54{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e55{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e56{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e5e{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e5f{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e60{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e68{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e69{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e6a{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-972f8e6b{width:0.829in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}speeddistnumericnumeric42410747228169101018102610341117n: 50 2.3 stargazer Code library(stargazer) 2.4 可查询表格 Code DT::datatable(mtcars) "],["数学.html", "第 3 章 数学 3.1 距离最短 3.2 牛顿迭代 3.3 微分 3.4 option", " 第 3 章 数学 Code library(tidyverse) library(plotly) 3.1 距离最短 Code (A=matrix(c(1,3,6,-1,2,5,2,5,9,6,5.5,11),byrow=F,ncol=2)) ## [,1] [,2] ## [1,] 1 2.0 ## [2,] 3 5.0 ## [3,] 6 9.0 ## [4,] -1 6.0 ## [5,] 2 5.5 ## [6,] 5 11.0 Code b=A[,1]%*%matrix(1,ncol=6,nrow=1) c=A[,2]%*%matrix(1,ncol=6,nrow=1) (d=sqrt(((b-t(b))^2+(c-t(c))^2))) ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 0.000 3.606 8.602 4.472 3.640 9.849 ## [2,] 3.606 0.000 5.000 4.123 1.118 6.325 ## [3,] 8.602 5.000 0.000 7.616 5.315 2.236 ## [4,] 4.472 4.123 7.616 0.000 3.041 7.810 ## [5,] 3.640 1.118 5.315 3.041 0.000 6.265 ## [6,] 9.849 6.325 2.236 7.810 6.265 0.000 Code dist(A) ## 1 2 3 4 5 ## 2 3.606 ## 3 8.602 5.000 ## 4 4.472 4.123 7.616 ## 5 3.640 1.118 5.315 3.041 ## 6 9.849 6.325 2.236 7.810 6.265 Code n=nrow(A) ax=A[,1]%*%matrix(1,ncol=6,nrow=1) ay=A[,2]%*%matrix(1,ncol=6,nrow=1) dx=ax-t(ax) dy=ay-t(ay) b=sqrt(dx^2+dy^2) 3.2 牛顿迭代 Code library(Deriv) # Version 3.8.5 f=function(x){ log(x)/(1+x) } f1&lt;- Deriv(f) f1 ## function (x) ## { ## .e1 &lt;- 1 + x ## (1/x - log(x)/.e1)/.e1 ## } Code f2=Deriv(f1) x=3 k=1 e=0.0001 for( i in 1:100){ x=x-f1(x)/f2(x) if(abs(f1(x))&lt;e){break} k=k+1 } 3.3 微分 3.3.1 高次微分 Code library(deSolve) yvini &lt;-c(y=0,v=1,z=8) derivs3 &lt;- function (t,y,parms){ with(as.list(c(y,parms)), { dy&lt;-v#1 order differentiation dv&lt;-z#2 order differentiation dz &lt;-(-12*exp(-t)-cc*y-b*v)/a# original equation list(c(dy,dv,dz)) }) } times &lt;- seq(from = 0, to = 5, by = 0.01) out3 &lt;- ode(y = c(y=0,v=1,z=8), times = times, func = derivs3, parms = c(a=1,b=-3,cc=-2))# solve f33&lt;-function(t)(2/3*exp(2*t)-2/3*exp(-t)-t*exp(-t)+2*t^2*exp(-t))# Theoretical equation by hand plot(out3[,1],out3[,2],type=&#39;l&#39;)# numerical solution curve(f33,0,5,add=T,col=&quot;red&quot;,lty=2)# fit perfectly 3.3.2 微分方程组 Code #(a) library(deSolve) model &lt;- function(t, y, p) { with(as.list(c(y, p)), { dN &lt;- a*N-g*N^2-b*N*G dG &lt;- -c*G+d*N*G list(c(dN, dG)) }) } # (b) y &lt;- c(N = 10000, G = 60) parms &lt;- c(a = 5,b=0.01,c=100,d=0.01,g=0.0001) times &lt;- seq(0, 10,0.001) out &lt;- ode(y, times, model, parms) plot(out) Code out &lt;- ode(y,times, model, parms) # (c) a = 5 b=0.01 c=100 d=0.01 g=0.0001 # is the solution when the right-hand side of the original equation is equal to 0 c/d#x ## [1] 10000 Code (a*d*c-g*c^2)/(b*d*c)#y ## [1] 400 Code # (d) for(i in seq(0.2,0.4,0.001)){ parms &lt;- c(a = 5,b=i,c=100,d=0.01,g=0.0001) out &lt;- ode(y,times, model, parms) if(any(out[,3]&lt;1))break } i # min b is 0.296 ## [1] 0.296 3.4 option 3.4.1 1 Code knitr::include_graphics(&#39;www/R_exam.png&#39;) Code # 6 Price=readxl::read_xlsx(&#39;data/data.xlsx&#39;,skip = 11) Price=as.data.frame(Price) colnames(Price)[4]=&quot;A&quot; head(Price,6) ## Year Period Label A ## 1 2002 M01 2002 Jan 173.2 ## 2 2002 M02 2002 Feb 173.7 ## 3 2002 M03 2002 Mar 174.7 ## 4 2002 M04 2002 Apr 175.8 ## 5 2002 M05 2002 May 175.8 ## 6 2002 M06 2002 Jun 175.9 Code # 7 Price=cbind(T=c(1:240),Price) plot(Price$T,Price$A,type=&quot;l&quot;) lines(Price$T,Price$T*0.355+176.8) Code # 8 dat=Price$A#ts data AM=c() for(i in 7:length(dat)){ AM[i-6]=mean(dat[i-6:i]) } head(AM) #The prediction begins with the 7 phase ## [1] 173.2 173.4 173.9 174.3 174.6 174.8 Code # 9 xl1=dat[-239:-240]#Yn-2 xl2=dat[c(-1,-240)]#Yn-1 xl=dat[-1:-2]#Y The prediction begins with the third phase myfun&lt;-function(myvalues){x1&lt;-myvalues[1];x2&lt;-myvalues[2];x3&lt;-myvalues[3]; y=x1*xl1+x2*xl2+x3 e=abs(xl-y);sum(e)} AR&lt;-optim(c(1,1,1), myfun) AR$par#Model coefficient ## [1] -0.5628 1.5583 1.2166 3.4.2 极值黑塞矩阵 Code f5=function(x,y){ l=(x^2+y-11)^2+(x+y^2-7)^2 l } x=y=seq(-4.5,4.5,0.1) z&lt;- outer(x,y,f5) persp(x,y,z, theta = 30, phi = 30,expand = 0.5, col = &quot;lightblue&quot;, ltheta = 120,shade = 0.75, ticktype = &quot;detailed&quot;,xlab =&quot;x1&quot;, ylab = &quot;x2&quot;,zlab =&quot;f(x1,x2)&quot;) Code plotly::plot_ly(x = ~x, y = ~y, z = ~z,color = ~z, colors = &#39;Reds&#39;,opacity = 0.8)%&gt;% add_surface() Code myfun&lt;-function(myvalues){ x&lt;-myvalues[1] y&lt;-myvalues[2] y=(x^2+y-11)^2+(x+y^2-7)^2 y } AR&lt;-optim(c(0,0), myfun,hessian = T) AR$par#Model coefficient ## [1] 3 2 Code eigen(AR$hessian)$values ## [1] 82.29 25.72 Code myfun(AR$par) ## [1] 2.984e-07 "],["app.html", "第 4 章 app", " 第 4 章 app Code # knitr::include_app(&quot; https://chz111.shinyapps.io/shiny_2sql/&quot;, # height = &quot;600px&quot;) "],["ab-test.html", "第 5 章 AB-test", " 第 5 章 AB-test Code x=rnorm(100,100,4) sigma=rnorm(100) y=2+x+sigma max(x,y) ## [1] 112.1 Code min(x,y) ## [1] 89.92 Code plot(x,ylim=c(min(x,y)-2,max(x,y)+2)) points(y,col=&#39;red&#39;) abline(h=mean(y),col=&quot;red&quot;) abline(h=mean(x)) Code t.test(x,y) ## ## Welch Two Sample t-test ## ## data: x and y ## t = -3.4, df = 198, p-value = 7e-04 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -3.0941 -0.8396 ## sample estimates: ## mean of x mean of y ## 99.46 101.42 Code t.test(x,y,paired = T) ## ## Paired t-test ## ## data: x and y ## t = -23, df = 99, p-value &lt;2e-16 ## alternative hypothesis: true mean difference is not equal to 0 ## 95 percent confidence interval: ## -2.138 -1.796 ## sample estimates: ## mean difference ## -1.967 Code library(pwrss) t.test(y,x) ## ## Welch Two Sample t-test ## ## data: y and x ## t = 3.4, df = 198, p-value = 7e-04 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## 0.8396 3.0941 ## sample estimates: ## mean of x mean of y ## 101.42 99.46 Code design_2means=pwrss.t.2means(mu1=mean(x), mu2=mean(y), sd1=sd(x), sd2=sd(y), alpha=0.05, power=0.8, alternative=&quot;less&quot;) ## Difference between Two means ## (Independent Samples t Test) ## H0: mu1 = mu2 ## HA: mu1 &lt; mu2 ## ------------------------------ ## Statistical power = 0.8 ## n1 = 53 ## n2 = 53 ## ------------------------------ ## Alternative = &quot;less&quot; ## Degrees of freedom = 104 ## Non-centrality parameter = -2.505 ## Type I error rate = 0.05 ## Type II error rate = 0.2 Code plot(design_2means) 重复测量Repeated-Measure Design 集群随机化Cluster Randomization 差中差估计Difference in Differences "],["pca-and-xgboot.html", "第 6 章 pca and xgboot、 6.1 数据 6.2 主成分分析 6.3 计算反差贡献 6.4 XGboot", " 第 6 章 pca and xgboot、 Code knitr::opts_chunk$set(echo = TRUE,warning = F,message = F) library(tidyverse) library(palmerpenguins) library(tidyverse) library(gt) library(gtExtras) library(shiny) library(gtExtras) library(showtext) showtext_auto(enable = TRUE) Code mythem&lt;-theme(plot.title = element_text(hjust = 0.5,#居中 vjust =0,#上下 color = &#39;black&#39;, face = &quot;italic&quot;)) 6.1 数据 Code library(survival) head(gbsg) ## pid age meno size grade nodes pgr er hormon rfstime ## 1 132 49 0 18 2 2 0 0 0 1838 ## 2 1575 55 1 20 3 16 0 0 0 403 ## 3 1140 56 1 40 3 3 0 0 0 1603 ## 4 769 45 0 25 3 1 0 4 0 177 ## 5 130 65 1 30 2 5 0 36 1 1855 ## 6 1642 48 0 52 2 11 0 0 0 842 ## status ## 1 0 ## 2 1 ## 3 0 ## 4 0 ## 5 0 ## 6 1 Code gbsg %&gt;% cor %&gt;% ggcorrplot::ggcorrplot()+labs(title=&quot;图1:&quot;,caption = &quot;中国制造&quot;)-&gt;p p+mythem age：患者年龄 meno：更年期状态（0表示未更年期，1表示已更年期） size：肿瘤大小 grade：肿瘤分级 nodes：受累淋巴结数量 pgr：孕激素受体表达水平 er：雌激素受体表达水平 hormon：激素治疗（0表示否，1表示是） rfstime：复发或死亡时间（以天为单位） status：事件状态（0表示被截尾，1表示事件发生） 6.2 主成分分析 Code # 去除pid、分类变量和因变量 factors &lt;- gbsg[,c(-1,-3,-5,-9,-11)] # 进行主成分分析 pca_result &lt;- prcomp(factors, scale. = TRUE) pca_result ## Standard deviations (1, .., p=6): ## [1] 1.2962 1.1716 0.9650 0.9276 0.7936 0.7254 ## ## Rotation (n x k) = (6 x 6): ## PC1 PC2 PC3 PC4 PC5 ## age 0.3413 -0.3741 0.69110 -0.2693 0.17943 ## size -0.3584 -0.4420 -0.35063 -0.4832 0.56009 ## nodes -0.3745 -0.5435 0.04155 -0.1138 -0.74136 ## pgr 0.4553 -0.2944 -0.60576 0.1897 -0.08063 ## er 0.5266 -0.4167 -0.01334 0.1425 0.02135 ## rfstime 0.3609 0.3302 -0.17492 -0.7904 -0.31231 ## PC6 ## age -0.401554 ## size 0.078115 ## nodes 0.004621 ## pgr -0.544638 ## er 0.726728 ## rfstime 0.088696 Code summary(pca_result) ## Importance of components: ## PC1 PC2 PC3 PC4 PC5 ## Standard deviation 1.30 1.172 0.965 0.928 0.794 ## Proportion of Variance 0.28 0.229 0.155 0.143 0.105 ## Cumulative Proportion 0.28 0.509 0.664 0.807 0.912 ## PC6 ## Standard deviation 0.7254 ## Proportion of Variance 0.0877 ## Cumulative Proportion 1.0000 Code plot(pca_result) Code biplot(pca_result) 主成分分析通常用于连续变量而不是分类变量。主成分分析是一种多变量统计技术，旨在减少数据维度并捕捉数据中的模式。它通过线性变换将原始变量转换为一组新的、不相关的变量，称为主成分。这些主成分是原始变量的线性组合，能够最大程度地保留原始数据的方差。 6.3 计算反差贡献 Code # 提取每个主成分的方差贡献率 variance_proportion &lt;- pca_result$sdev^2 / sum(pca_result$sdev^2) # 计算累积方差贡献率 cumulative_variance_proportion &lt;- cumsum(variance_proportion) # 绘制保留方差图 plot(cumulative_variance_proportion, xlab = &quot;Number of Principal Components&quot;, ylab = &quot;Cumulative Variance Proportion&quot;, ylim = c(0, 1), type = &#39;b&#39; ) Code pca_score &lt;- as.data.frame(pca_result$x) # 通常选择贡献度大于80或者90%的作为分析变量 score &lt;- pca_score[,c(-1,-2,-3)] data &lt;- cbind(gbsg[c(3,5,9,11)],score) Code # 划分训练集和测试集 set.seed(123) data &lt;- gbsg[,c(-1)] # 划分训练集和测试集 set.seed(123) train_indices &lt;- sample(x = 1:nrow(data), size = 0.7 * nrow(data), replace = FALSE) test_indices &lt;- sample(setdiff(1:nrow(data), train_indices), size = 0.3 * nrow(data), replace = FALSE) train_data &lt;- data[train_indices, ] test_data &lt;- data[test_indices, ] Code # 划分训练集和测试集 set.seed(123) train_indices &lt;- sample(x = 1:nrow(data), size = 0.8 * nrow(data), replace = FALSE) test_indices &lt;- sample(setdiff(1:nrow(data), train_indices), size = 0.2 * nrow(data), replace = FALSE) train_data &lt;- data[train_indices, ] test_data &lt;- data[test_indices, ] train_gbsg &lt;- gbsg[train_indices, ] test_gbsg &lt;- gbsg[test_indices, ] library(randomForest) library(pROC) set.seed(666) # 主成分分析后模型 rf &lt;- randomForest(status~., data=train_data) # 获取模型预测的概率 pred_prob &lt;- predict(rf, newdata = test_data, type = &quot;class&quot;) # 计算真阳性率和假阳性率 roc1 &lt;- pROC::roc(test_data$status, pred_prob) # 原始数据模型 # 特征选择后的模型拟合 rf_handle &lt;- randomForest(status~., data=train_gbsg) pred_prob_handle &lt;- predict(rf_handle, newdata = test_gbsg, type = &quot;class&quot;) # 计算真阳性率和假阳性率 roc2 &lt;- pROC::roc(test_gbsg$status, pred_prob_handle) plot(roc1,col=&quot;#2E9FDF&quot;, legacy.axes = TRUE) plot.roc(roc2,add=TRUE,col=&quot;red&quot;) abline(h = seq(0, 1, by = 0.1), col = &quot;gray&quot;, lty = &quot;dotted&quot;) legend(0.40, 0.17, # 图例位置x，y bty = &quot;n&quot;, # 图例样式 legend=c(&quot;Handle AUC 0.684&quot;,&quot;Unhandle AUC 0.854&quot;), # 添加分组 col=c(&quot;#2E9FDF&quot;,&quot;red&quot;), # 颜色跟前面一致 lwd=2, border=&quot;black&quot;) # 线条粗 6.3.1 总结 在乳腺癌研究中，主成分分析（PCA）和随机森林都扮演着重要的角色。PCA可以用于降维，帮助去除数据中的冗余信息，凸显出最重要的特征，从而有助于更好地理解乳腺癌数据集的内在结构。通过这种降维的方式，可以更好地可视化数据、识别潜在的模式，并为后续建模提供更清晰的特征空间。 另一方面，随机森林是一种强大的机器学习算法，它在处理复杂的、高维度的数据集时表现优异。在乳腺癌研究中，随机森林可以用于特征选择和分类任务，能够有效地处理大量特征并且对噪声具有一定的鲁棒性，因此能够提供对乳腺癌数据进行有效分类和预测的能力。 数据科学在医疗领域的应用前景广阔。随着医疗技术的不断进步，数据的积累和共享成为可能，数据科学将在医疗领域发挥越来越重要的作用。 个性化医疗：利用大数据和机器学习技术，可以实现对患者病情、治疗反应等个性化特征的分析，从而实现个性化的医疗方案，提高治疗效果和患者生活质量。 疾病预测和预防：通过对大规模医疗数据的分析，可以发现潜在的疾病发生规律和风险因素，从而提前预测和预防疾病的发生，有助于公共卫生和健康管理工作。 医疗资源优化：通过数据科学的方法，可以对医疗资源的分配和利用进行优化，提高医疗服务的效率和公平性。 总的来说，数据科学在医疗领域的发展将为医疗健康产业带来革命性的变化，为人类健康事业作出重要贡献。 ##逻辑回归 Code library(rms) library(survival) ddist &lt;- datadist(gbsg[,-1]); options(datadist=&#39;ddist&#39;) # 拟合逻辑回归模型 model &lt;- lrm(status ~ ., data = gbsg[,-1]) 绘制列线图 Code nomogram &lt;- nomogram(model, fun = function(x)1/(1+exp(-x))) # 逻辑回归计算公式 # 绘制列线图 plot(nomogram) Code model &lt;- lrm(status ~ age + meno + nodes, data = gbsg[,-1]) nomogram &lt;- nomogram(model, fun = function(x)1/(1+exp(-x))) # 逻辑回归计算公式 # 绘制列线图 plot(nomogram) 从图中可以看出，age 49时对应的分数是11分，然后meno为0对应的分值为0，nodes为2时对应的分数为3分，总分值为14分，总分值对应的预测值是0.3-0.4之间，小于0.5，所以其预测值应该是0，和实际结果一致。除了这些我们还可以看到哪些信息呢？ 特征的取值范围：比如age的取值范围是20-80，meno取值范围是0-1（分类变量），nodes取值范围是0-55. 特征的权重(特征重要性)：线越长代表权重越大，从图中可以看出：nodes &gt; age &gt; meno; 特征的影响趋势(正向、负向)：age越大，发生事件的概率越低，所以是负向趋势；meno和nodes都是随着值越大发生事件的概率越大，所以是正向趋势； 得分：可以通过point得出单个病人某个指标对应的分值，然后通过分值累加即可获得total point； 预测概率：我们可以通过计算得出的total point比对出事件发生的概率。 Code ddist &lt;- datadist(gbsg[,-1]); options(datadist=&#39;ddist&#39;) model &lt;- lrm(status ~ ., data = gbsg[,-1]) nomogram &lt;- nomogram(model, fun = function(x)1/(1+exp(-x)),funlabel=&quot;Risk of Event&quot;,conf.int=F,lp=F,fun.at=c(.001,.01,.05,seq(.1,.9,by=.1),.95,.99,.99)) # 逻辑回归计算公式 # 绘制列线图 plot(nomogram) rect(0.191,0.095,0.65,0.11,col = &quot;green&quot;) # 添加彩色条带 rect(0.65,0.095,0.705,0.11,col = &quot;yellow&quot;) # 添加彩色条带 rect(0.705,0.095,1.003,0.11,col = &quot;red&quot;) # 添加彩色条带 text(0.4,0.125,&quot;Low&quot;) text(0.68,0.125,&quot;Medium&quot;) text(0.85,0.125,&quot;High&quot;) 在本文中，我们介绍了列线图的基本概念、绘制方法和应用场景。列线图是一种常用的数据可视化工具，它可以帮助我们探索变量之间的关系，解释模型的预测效果，并支持数据驱动的决策。 我们提供了一些实用的技巧和建议，如如何解释列线图的结果、如何定制样式、如何探索非线性关系和如何使用交互式可视化工具等。这些技巧可以帮助读者更好地理解和利用列线图。 未来，我们预计列线图将在数据分析中发挥更重要的作用。随着数据量的不断增加和机器学习的广泛应用，列线图将成为处理大规模数据和评估复杂模型的有力工具。我们鼓励读者继续学习和实践列线图的应用，以应对数据分析领域的挑战。 6.4 XGboot XGBoost是一个基于梯度提升决策树的机器学习框架，以其高效、可扩展和灵活的特点而著称。其核心算法基于梯度提升决策树，通过迭代地构建一系列弱学习器来逼近一个强大的学习器，从而实现对数据的复杂非线性关系的建模。 「自适应学习率调整功能」，能够自动调整每个决策树的学习率，以提高模型的训练速度和性能。 「支持处理分类特征」，不需要进行独热编码或标签编码，能够直接处理原始的分类数据，这使得模型更加精确且能够保留分类特征的信息。 「优秀的泛化能力」，在处理较少训练样本和高维度数据时能够表现出色。 XGBoost与可解释性。传统的决策树可能会因为过拟合而产生过于复杂的结构，使得解释起来非常困难。而XGBoost与可解释性通过使用基于树的梯度提升方法，能够自动地优化树的深度和叶节点的数量，从而生成易于解释的模型。 「特征重要性评估」：能够计算每个特征对于模型预测的贡献程度，进而帮助我们了解哪些特征对于模型的决策起到了重要作用。这使得我们可以识别出关键特征，进行特征工程或优化模型。 「特征交互可视化」：提供了直观的特征交互可视化功能，能够帮助我们理解不同特征之间的相互作用和影响，例如通过绘制特征之间的依赖关系图或局部影响图。 「模型解释性工具」：提供了一些工具来帮助我们更好地解释模型的决策过程，如决策路径、叶子节点的统计信息等。这些工具可以揭示模型的内部逻辑和规则，从而增强模型的可解释性。 「提供了一系列可视化工具」，如特征重要性评估和模型解释树，帮助用户更好地理解模型决策过程。 Code library(xgboost) library(pROC) bst &lt;- xgboost(data = as.matrix(train_data[,c(-10,-11)]), label = train_data$status, max_depth = 2, eta = 1, nthread = 2, nrounds = 2, objective = &quot;binary:logistic&quot;) ## [1] train-logloss:0.547861 ## [2] train-logloss:0.521312 Code library(DALEXtra) cat_exp &lt;- explain_tidymodels(bst, data = as.matrix(train_data[,c(-10,-11)]), y=train_data$status, label = &quot;Catboost&quot;) ## Preparation of a new explainer is initiated ## -&gt; model label : Catboost ## -&gt; data : 548 rows 9 cols ## -&gt; target variable : 548 values ## -&gt; predict function : yhat.xgb.Booster will be used ( default ) ## -&gt; predicted values : No value for predict function target column. ( default ) ## -&gt; model_info : package xgboost , ver. 1.7.6.1 , task classification ( default ) ## -&gt; predicted values : numerical, min = 0.1217 , mean = 0.4412 , max = 0.8024 ## -&gt; residual function : difference between y and yhat ( default ) ## -&gt; residuals : numerical, min = -0.8024 , mean = -0.001398 , max = 0.8781 ## A new explainer has been created! Code cat_shap &lt;- predict_parts(cat_exp, new_observation=as.matrix(train_data[3,c(-10,-11)]), type = &quot;shap&quot;) plot(cat_shap,show_boxplots=TRUE) 个体SHAP图展示每个特征对个体预测的贡献度，从图中我们可以看出，rfstime和grade 对预测的贡献度较大。 Code cat_cp &lt;- predict_profile(cat_exp, new_observation = as.matrix(train_data[3,c(-10,-11)])) plot(cat_cp,subtitle=&quot;&quot;) CP图显示特征对目标值的影响情况，图中圆点表示样本2 的每个特征的值。 部分依赖图（PDP Code library(ingredients) cat_pd &lt;- partial_dependence(cat_exp) plot(cat_pd,subtitle=&quot;&quot;) 变量重要性 Code library(vivo) cat_profiles &lt;- model_profile(cat_exp) cat_vp &lt;- global_variable_importance(cat_profiles) plot(cat_vp) ROC Code library(auditor) plot(model_evaluation(cat_exp))+geom_abline() "],["聚类.html", "第 7 章 聚类 7.1 1 Data Importing 7.2 2 Clustering 7.3 3 Describe the clusters you found with PAM 7.4 4 Clustering evaluation and comparison 7.5 5 Anomaly detection", " 第 7 章 聚类 Code set.seed(111) (ind=floor(runif(10)*150)) ## [1] 88 108 55 77 56 62 1 79 64 14 Code iristest=iris[ind,] irisdata=iris[-ind,] Code # 3 d1=dist(irisdata[1:6,-5],method = &quot;euclidean&quot;)#求解距离矩阵，默认为欧几里得距离 d2=dist(irisdata[1:6,-5],method = &quot;manhattan&quot;)#计算马氏距离矩阵 d3=dist(irisdata[1:6,-5],method = &quot;canberra&quot;)#计算兰氏距离矩阵 # 4 hclust(dist(irisdata[,-5]),method = &quot;single&quot;) ## ## Call: ## hclust(d = dist(irisdata[, -5]), method = &quot;single&quot;) ## ## Cluster method : single ## Distance : euclidean ## Number of objects: 140 Code hclust(dist(irisdata[,-5]),method = &quot;complete&quot;) ## ## Call: ## hclust(d = dist(irisdata[, -5]), method = &quot;complete&quot;) ## ## Cluster method : complete ## Distance : euclidean ## Number of objects: 140 Code hclust(dist(irisdata[,-5]),method = &quot;average&quot;) ## ## Call: ## hclust(d = dist(irisdata[, -5]), method = &quot;average&quot;) ## ## Cluster method : average ## Distance : euclidean ## Number of objects: 140 Code # 5 km.mod=kmeans(dist(irisdata[,-5]),3)#均值聚类 table(km.mod$cluster,irisdata$Species) ## ## setosa versicolor virginica ## 1 0 37 3 ## 2 48 0 0 ## 3 0 6 46 7.1 1 Data Importing Code library(tidyverse) library(cluster) heart=read.csv(&quot;data/heart_failure_clinical_records_dataset.csv&quot;) head(heart) ## age anaemia creatinine_phosphokinase diabetes ## 1 75 0 582 0 ## 2 55 0 7861 0 ## 3 65 0 146 0 ## 4 50 1 111 0 ## 5 65 1 160 1 ## 6 90 1 47 0 ## ejection_fraction high_blood_pressure platelets ## 1 20 1 265000 ## 2 38 0 263358 ## 3 20 0 162000 ## 4 20 0 210000 ## 5 20 0 327000 ## 6 40 1 204000 ## serum_creatinine serum_sodium sex smoking time ## 1 1.9 130 1 0 4 ## 2 1.1 136 1 0 6 ## 3 1.3 129 1 1 7 ## 4 1.9 137 1 0 7 ## 5 2.7 116 0 0 8 ## 6 2.1 132 1 1 8 ## DEATH_EVENT ## 1 1 ## 2 1 ## 3 1 ## 4 1 ## 5 1 ## 6 1 Code dim(heart) ## [1] 299 13 Code table(heart$DEATH_EVENT) ## ## 0 1 ## 203 96 7.2 2 Clustering 7.2.1 2.0 pre-processing Code d=dist(heart)#Distance matrix name1=c(&quot;anaemia&quot;,&quot;diabetes&quot;,&quot;high_blood_pressure&quot;,&quot;sex&quot;,&quot;smoking&quot;)#Binary classification data names(heart) ## [1] &quot;age&quot; ## [2] &quot;anaemia&quot; ## [3] &quot;creatinine_phosphokinase&quot; ## [4] &quot;diabetes&quot; ## [5] &quot;ejection_fraction&quot; ## [6] &quot;high_blood_pressure&quot; ## [7] &quot;platelets&quot; ## [8] &quot;serum_creatinine&quot; ## [9] &quot;serum_sodium&quot; ## [10] &quot;sex&quot; ## [11] &quot;smoking&quot; ## [12] &quot;time&quot; ## [13] &quot;DEATH_EVENT&quot; Code heart2=heart heart2[,c(2,4,6,10,11)]=lapply(heart[,c(2,4,6,10,11)], as.factor)#factor data 7.2.2 2.1 K-means Find groups of similar cases in your data set using k-means clustering. We analyzed the case k equal to 2 − 15 directly on the original data. Code set.seed(444) avgSil &lt;- c() km &lt;- list() #code from lab for(k in 2:10) { cl &lt;- kmeans(heart[,-13],centers=k,iter.max=200) s &lt;- silhouette(cl$cluster,d) avgSil &lt;- c(avgSil, mean(s[,3])) km[[paste0(&quot;k=&quot;,k)]] &lt;- cl } df &lt;- data.frame(nk=2:10, Silh=avgSil) 1.Using the Silhouette coefficient,We want to find the point with the largest silhouette coefficient, which shows the relationship between the within-group distance and the between-group distance. Code ggplot(df, aes(x=nk,y=avgSil)) + geom_point(size=3,color=&quot;red&quot;) + geom_line() + xlab(&quot;K&quot;) + ylab(&quot;Silh.Coef.&quot;)+ theme_bw() Select K=4 which is the highest average silhouette coefficient. 2.Using the Elbow method,We need to find the obvious turning point. Code withinss &lt;- data.frame(k = 2:10, withinss = sapply(km,function(x) x$tot.withinss)) ggplot(withinss, aes(x = k, y = withinss)) + geom_point(col=&quot;red&quot;)+ geom_line() + xlab(&quot;k&quot;) + ylab(&quot;Total Within-Cluster Sum of Squares&quot;)+ theme_bw() Select K at the inflection point (K=4). The most appropriate number of clusters is four in 2-6.It is the category with the largest silhouette coefficient and is clearly turning Using the Elbow method 7.2.3 2.2 Hierarchical clustering(Manhattan distance) Code ### Hierarchical clustering and the Manhattan distance h &lt;- hclust(dist(heart[,-13],method = &quot;manhattan&quot;))#Distance matrix plot(h) rect.hclust(h,k=3,border=&quot;red&quot;) Code cls &lt;- cutree(h,3) table(cls) ## cls ## 1 2 3 ## 162 135 2 7.2.4 2.3 PAM (Gower) PAM is a medoid-based clustering algorithm that attempts to partition a dataset into a predetermined number of clusters, where the center of each cluster is the actual observation (medoid) in the dataset. Unlike k-means clustering, PAM uses medoids instead of means as cluster center points, which makes PAM more robust to handling outliers. The PAM function is used to perform PAM clustering in a given R code. The daisy() function is used to compute the Gower similarity matrix of the dataset, which contains a measure of similarity between samples. The Gower similarity measure is suitable for mixed data types (a combination of numeric and categorical variables) because it takes into account distance measures for different types of variables. Code set.seed(444) pam_gower &lt;- pam(daisy(heart2[,-13], metric = &quot;gower&quot;), k = 3)#gower need factor var table(pam_gower$clustering) ## ## 1 2 3 ## 110 92 97 7.3 3 Describe the clusters you found with PAM The clusplot function is often used for visualizing clusters, There is an intersection of the three categories Code clusplot(pam_gower, main = &quot;Cluster Analysis using PAM&quot;) the 3 cluster means (center). We can focus on variables that are significantly different.like 3 is high anaemia. Code (summ=aggregate(heart,list(pam_gower$clustering),mean)) ## Group.1 age anaemia creatinine_phosphokinase ## 1 1 61.63 0.2545 681.2 ## 2 2 60.77 0.3261 599.6 ## 3 3 59.99 0.7320 452.3 ## diabetes ejection_fraction high_blood_pressure ## 1 0.2273 37.64 0.3727 ## 2 0.2935 37.05 0.3043 ## 3 0.7526 39.57 0.3711 ## platelets serum_creatinine serum_sodium sex ## 1 249258 1.420 136.6 0.7727 ## 2 264655 1.350 136.7 0.9783 ## 3 278118 1.406 136.6 0.1959 ## smoking time DEATH_EVENT ## 1 0.00000 129.8 0.3545 ## 2 1.00000 129.0 0.3043 ## 3 0.04124 131.9 0.2990 Further analysis of sample distribution for each class using box plots reveals that the age of sample 3 is relatively low. Sample 3 is mostly female, and sample 2 is mostly associated with smoking. Code heart %&gt;% mutate(group=factor(pam_gower$clustering))%&gt;% pivot_longer(cols =-group) %&gt;% ggplot(aes(x=group,y=value,fill=group,group=group))+ # geom_histogram(show.legend = F)+ geom_boxplot()+ facet_wrap(~name,scales=&quot;free&quot;) Classical multidimensional scaling (MDS) of a data matrix. Also known as principal coordinates analysis,We’re going to convert this to two dimensional coordinates and look at the distribution Code ggplot(data.frame(cmdscale(daisy(heart2[,-13], metric = &quot;gower&quot;),k=2),lab=1:299),aes(x=X1,y=X2,label=lab))+geom_point(alpha=0.5,size=0.5)+geom_text(size=3,col=pam_gower$clustering) 7.4 4 Clustering evaluation and comparison Code km3 &lt;- kmeans(heart[,-13],centers=3,iter.max=200)#3-kmeans ggplot(data.frame(cmdscale(dist(heart[,-13]),k=2),lab=1:299,km3$cluster), aes(x=X1,y=X2,label=lab))+ geom_point(alpha=0.5,size=0.5)+ geom_text(size=3,col=km3$cluster) Code s1 &lt;- silhouette(km3$cluster,dist(heart[,-13])) plot(s1, main = &quot;silhouette coefficient of Kmeans&quot;, border = NA) Code s3 &lt;- silhouette(pam_gower$clustering,daisy(heart2[,-13], metric = &quot;gower&quot;)) plot(s3, main = &quot;silhouette coefficient of PAM&quot;, border = NA) Code ggplot(data.frame(cmdscale(daisy(heart2[,-13], metric = &quot;gower&quot;),k=2),lab=1:299), aes(x=X1,y=X2,label=lab))+ geom_point(alpha=0.5,size=0.5)+ geom_text(size=3,col=pam_gower$clustering)+theme_bw() - The comparison reveals that 4 K-means has the best silhouette coefficient, Hierarchical clustering has three classes but the sample size of one class is too small to be considered outlier. PAM three classes are fairly uniform, but we saw earlier that it overlaps. We convert the distance to coordinates, but since the distance matrix calculation is different, we need to think about which cluster is better 7.5 5 Anomaly detection Our analysis is based on the simple Euclidean distance, measured on the raw data 7.5.1 LOF k=3,LOF&gt;4，This method counted 17 samples as abnormal.We show the details of these samples, and the mean comparison of the population can show its characteristics Code library(DMwR2) dist=dist(heart) lof &lt;- lofactor(dist,3) (ind=sum(lof[order(lof,decreasing = T)]&gt;4))#LOF&gt;4 ## [1] 17 Code (anomalies1=order(lof,decreasing = T)[1:ind]) ## [1] 239 254 60 63 97 2 245 107 259 167 203 244 ## [13] 17 158 53 169 296 Code heart[anomalies1,] ## age anaemia creatinine_phosphokinase diabetes ## 239 65 1 720 1 ## 254 70 0 88 1 ## 60 72 0 364 1 ## 63 55 0 109 0 ## 97 63 1 514 1 ## 2 55 0 7861 0 ## 245 54 0 582 1 ## 107 55 0 748 0 ## 259 45 1 66 1 ## 167 53 0 196 0 ## 203 70 0 97 0 ## 244 73 1 1185 0 ## 17 87 1 149 0 ## 158 50 0 250 0 ## 53 60 0 3964 1 ## 169 65 0 582 1 ## 296 55 0 1820 0 ## ejection_fraction high_blood_pressure platelets ## 239 40 0 257000 ## 254 35 1 236000 ## 60 20 1 254000 ## 63 35 0 254000 ## 97 25 1 254000 ## 2 38 0 263358 ## 245 38 0 264000 ## 107 45 0 263000 ## 259 25 0 233000 ## 167 60 0 220000 ## 203 60 1 220000 ## 244 40 1 220000 ## 17 38 0 262000 ## 158 25 0 262000 ## 53 62 0 263358 ## 169 40 0 270000 ## 296 38 0 270000 ## serum_creatinine serum_sodium sex smoking time ## 239 1.0 136 0 0 210 ## 254 1.2 132 0 0 215 ## 60 1.3 136 1 1 59 ## 63 1.1 139 1 1 60 ## 97 1.3 134 1 0 83 ## 2 1.1 136 1 0 6 ## 245 1.8 134 1 0 213 ## 107 1.3 137 1 0 88 ## 259 0.8 135 1 0 230 ## 167 0.7 133 1 1 134 ## 203 0.9 138 1 0 186 ## 244 0.9 141 0 0 213 ## 17 0.9 140 1 0 14 ## 158 1.0 136 1 1 120 ## 53 6.8 146 0 0 43 ## 169 1.0 138 0 0 140 ## 296 1.2 139 0 0 271 ## DEATH_EVENT ## 239 0 ## 254 0 ## 60 1 ## 63 0 ## 97 0 ## 2 1 ## 245 0 ## 107 0 ## 259 0 ## 167 0 ## 203 0 ## 244 0 ## 17 1 ## 158 0 ## 53 1 ## 169 0 ## 296 0 Code data.frame(cmdscale(dist,k=2),lab=1:299) %&gt;% mutate(col=ifelse(lab%in%anomalies1,&quot;outlier&quot;,&quot;no&quot;)) %&gt;% ggplot(aes(x=X1,y=X2,label=lab,col=col))+ geom_point(alpha=0.5,size=0.5)+geom_text(size=3)+theme_bw() 7.5.2 DBSCAN We measure our detection range as 0.6 times the average distance between point, We counted 19 samples as outliers. Code library(fpc) (myer &lt;- dbscan(dist,0.6*mean(dist),3)) ## dbscan Pts=299 MinPts=3 eps=60585 ## 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 ## border 23 0 0 0 1 0 0 0 1 2 0 0 0 0 0 2 ## seed 0 112 6 53 14 30 8 4 6 10 11 3 4 3 5 1 ## total 23 112 6 53 15 30 8 4 7 12 11 3 4 3 5 3 Code (anomalies2=which(myer$cluster==0)) ## [1] 15 16 20 50 52 56 66 70 72 106 110 118 ## [13] 177 213 225 231 241 276 278 282 288 297 299 Code heart[anomalies2,] ## age anaemia creatinine_phosphokinase diabetes ## 15 49 1 80 0 ## 16 82 1 379 0 ## 20 48 1 582 1 ## 50 57 1 129 0 ## 52 53 1 91 0 ## 56 95 1 371 0 ## 66 60 0 68 0 ## 70 65 0 113 1 ## 72 58 0 582 1 ## 106 72 1 328 0 ## 110 45 0 292 1 ## 118 85 1 102 0 ## 177 69 0 1419 0 ## 213 78 0 224 0 ## 225 58 0 582 1 ## 231 60 0 166 0 ## 241 70 0 81 1 ## 276 45 0 582 0 ## 278 70 0 582 1 ## 282 70 0 582 0 ## 288 45 0 582 1 ## 297 45 0 2060 1 ## 299 50 0 196 0 ## ejection_fraction high_blood_pressure platelets ## 15 30 1 427000 ## 16 50 0 47000 ## 20 55 0 87000 ## 50 30 0 395000 ## 52 20 1 418000 ## 56 30 0 461000 ## 66 20 0 119000 ## 70 25 0 497000 ## 72 35 0 122000 ## 106 30 1 621000 ## 110 35 0 850000 ## 118 60 0 507000 ## 177 40 0 105000 ## 213 50 0 481000 ## 225 25 0 504000 ## 231 30 0 62000 ## 241 35 1 533000 ## 276 38 1 422000 ## 278 38 0 25100 ## 282 40 0 51000 ## 288 55 0 543000 ## 297 60 0 742000 ## 299 45 0 395000 ## serum_creatinine serum_sodium sex smoking time ## 15 1.00 138 0 0 12 ## 16 1.30 136 1 0 13 ## 20 1.90 121 0 0 15 ## 50 1.00 140 0 0 42 ## 52 1.40 139 0 0 43 ## 56 2.00 132 1 0 50 ## 66 2.90 127 1 1 64 ## 70 1.83 135 1 0 67 ## 72 0.90 139 1 1 71 ## 106 1.70 138 0 1 88 ## 110 1.30 142 1 1 88 ## 118 3.20 138 0 0 94 ## 177 1.00 135 1 1 147 ## 213 1.40 138 1 1 192 ## 225 1.00 138 1 0 205 ## 231 1.70 127 0 0 207 ## 241 1.30 139 0 0 212 ## 276 0.80 137 0 0 245 ## 278 1.10 140 1 0 246 ## 282 2.70 136 1 1 250 ## 288 1.00 132 0 0 250 ## 297 0.80 138 0 0 278 ## 299 1.60 136 1 1 285 ## DEATH_EVENT ## 15 0 ## 16 1 ## 20 1 ## 50 1 ## 52 1 ## 56 1 ## 66 1 ## 70 1 ## 72 0 ## 106 1 ## 110 0 ## 118 0 ## 177 0 ## 213 0 ## 225 0 ## 231 1 ## 241 0 ## 276 0 ## 278 0 ## 282 0 ## 288 0 ## 297 0 ## 299 0 Code data.frame(cmdscale(dist,k=2),lab=1:299) %&gt;% mutate(col=ifelse(lab%in%anomalies2,&quot;outlier&quot;,&quot;no&quot;)) %&gt;% ggplot(aes(x=X1,y=X2,label=lab,col=col))+ geom_point(alpha=0.5,size=0.5)+geom_text(size=3)+theme_bw() no both algorithm Sample 2 appears in both methods Code intersect(anomalies1,anomalies2) ## integer(0) "],["回归.html", "第 8 章 回归 8.1 有序glm 8.2 药物浓度拟合参数方程 8.3 多余变量", " 第 8 章 回归 8.1 有序glm Code library(haven) library(tidyverse) library(&quot;MASS&quot;) df&lt;-read_dta(&quot;data/CGSS2010.dta&quot;) ndf=df %&gt;% dplyr::select(a36,a285,a3a,a2,a15,a18,a8a,a5,a7a,a10,a69,a681,a682,a65,a611,a612) aa=ndf %&gt;% reframe(happiness=ordered(ifelse(a36&gt;0,a36,NA)), internet=ifelse(a285&gt;0,a285,NA), age=ifelse(a3a&lt;0,NA,2010-a3a), gender=ifelse(a2==1,1,ifelse(a2==2,0,NA)), health=ifelse(a15&gt;0,a15,NA), hukou=ifelse(a18==1,0,ifelse(a18==2,1,NA)), ininc=ifelse(a8a&gt;9999995|a8a==0,NA,log(a8a)), rel=ifelse(a5==1,0,ifelse(a5&gt;1,1,NA)), edu=ifelse(a7a&lt;0,NA,a7a), pol=ifelse(a10&lt;0,NA,ifelse(a10==1,1,0)), mar=ifelse(a69&lt;0,NA,ifelse(a69%in%c(1,2,5,6),0,1)), kid=ifelse((a681+a682)&lt;0,NA,ifelse((a681+a682)==0,0,1)), hou=ifelse(a65&lt;0,NA,a65), med=ifelse(a611==1,1,ifelse(a611==2,0,NA)), end=ifelse(a612==1,1,ifelse(a612==2,0,NA))) fo=paste0(names(aa)[1],&quot;~&quot;,paste0(names(aa)[-1],collapse = &quot;+&quot;)) aa=na.omit(aa) mod_oglm1=polr(happiness ~internet, Hess=TRUE,method = c(&quot;logistic&quot;),data = aa) mod_oglm2=polr(fo, Hess=TRUE,method = c(&quot;logistic&quot;),data = aa) mod_oprob1=polr(happiness ~internet, Hess=TRUE,method = c(&quot;probit&quot;), data = aa) mod_oprob2=polr(fo,Hess=TRUE,method = c(&quot;probit&quot;),data = aa) summary(mod_oglm1) ## Call: ## polr(formula = happiness ~ internet, data = aa, Hess = TRUE, ## method = c(&quot;logistic&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.108 0.0155 6.98 ## ## Intercepts: ## Value Std. Error t value ## 1|2 -3.675 0.082 -44.606 ## 2|3 -2.072 0.047 -44.477 ## 3|4 -0.821 0.038 -21.847 ## 4|5 1.861 0.043 43.190 ## ## Residual Deviance: 19357.50 ## AIC: 19367.50 Code summary(mod_oglm2) ## Call: ## polr(formula = fo, data = aa, Hess = TRUE, method = c(&quot;logistic&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.0564 0.02248 2.5104 ## age 0.0243 0.00203 11.9454 ## gender -0.3101 0.04567 -6.7899 ## health 0.4633 0.02235 20.7282 ## hukou -0.1823 0.05987 -3.0444 ## ininc 0.2114 0.02483 8.5170 ## rel 0.2569 0.06791 3.7832 ## edu 0.0008 0.01162 0.0688 ## pol 0.3066 0.06958 4.4068 ## mar 0.5846 0.07023 8.3243 ## kid -0.3430 0.09898 -3.4655 ## hou 0.2020 0.04114 4.9094 ## med 0.3909 0.07149 5.4683 ## end 0.0975 0.05121 1.9040 ## ## Intercepts: ## Value Std. Error t value ## 1|2 1.434 0.265 5.409 ## 2|3 3.090 0.258 11.965 ## 3|4 4.424 0.260 17.045 ## 4|5 7.328 0.269 27.257 ## ## Residual Deviance: 18482.22 ## AIC: 18518.22 Code summary(mod_oprob1) ## Call: ## polr(formula = happiness ~ internet, data = aa, Hess = TRUE, ## method = c(&quot;probit&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.064 0.00885 7.23 ## ## Intercepts: ## Value Std. Error t value ## 1|2 -1.936 0.035 -55.365 ## 2|3 -1.205 0.025 -48.905 ## 3|4 -0.511 0.022 -23.391 ## 4|5 1.112 0.024 46.887 ## ## Residual Deviance: 19354.02 ## AIC: 19364.02 Code summary(mod_oprob2) ## Call: ## polr(formula = fo, data = aa, Hess = TRUE, method = c(&quot;probit&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.03531 0.01273 2.774 ## age 0.01353 0.00114 11.904 ## gender -0.17445 0.02580 -6.761 ## health 0.25629 0.01229 20.851 ## hukou -0.10082 0.03353 -3.007 ## ininc 0.11831 0.01393 8.493 ## rel 0.15147 0.03751 4.038 ## edu 0.00097 0.00662 0.146 ## pol 0.18216 0.03987 4.568 ## mar 0.31141 0.03903 7.979 ## kid -0.16593 0.05518 -3.007 ## hou 0.11223 0.02325 4.828 ## med 0.21133 0.04017 5.262 ## end 0.05116 0.02878 1.777 ## ## Intercepts: ## Value Std. Error t value ## 1|2 0.881 0.145 6.074 ## 2|3 1.674 0.144 11.610 ## 3|4 2.421 0.145 16.694 ## 4|5 4.145 0.148 27.953 ## ## Residual Deviance: 18478.40 ## AIC: 18514.40 Code stargazer::stargazer(type=&quot;text&quot;,mod_oglm1,mod_oglm2,mod_oprob1) ## ## ========================================== ## Dependent variable: ## ----------------------------- ## happiness ## ordered ordered ## logistic probit ## (1) (2) (3) ## ------------------------------------------ ## internet 0.108*** 0.056** 0.064*** ## (0.016) (0.022) (0.009) ## ## age 0.024*** ## (0.002) ## ## gender -0.310*** ## (0.046) ## ## health 0.463*** ## (0.022) ## ## hukou -0.182*** ## (0.060) ## ## ininc 0.211*** ## (0.025) ## ## rel 0.257*** ## (0.068) ## ## edu 0.001 ## (0.012) ## ## pol 0.307*** ## (0.070) ## ## mar 0.585*** ## (0.070) ## ## kid -0.343*** ## (0.099) ## ## hou 0.202*** ## (0.041) ## ## med 0.391*** ## (0.071) ## ## end 0.098* ## (0.051) ## ## ------------------------------------------ ## Observations 8,178 8,178 8,178 ## ========================================== ## Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 Code stargazer::stargazer(type=&quot;text&quot;,mod_oglm1,mod_oglm2,mod_oprob1,mod_oprob2) ## ## ================================================== ## Dependent variable: ## ------------------------------------- ## happiness ## ordered ordered ## logistic probit ## (1) (2) (3) (4) ## -------------------------------------------------- ## internet 0.108*** 0.056** 0.064*** 0.035*** ## (0.016) (0.022) (0.009) (0.013) ## ## age 0.024*** 0.014*** ## (0.002) (0.001) ## ## gender -0.310*** -0.174*** ## (0.046) (0.026) ## ## health 0.463*** 0.256*** ## (0.022) (0.012) ## ## hukou -0.182*** -0.101*** ## (0.060) (0.034) ## ## ininc 0.211*** 0.118*** ## (0.025) (0.014) ## ## rel 0.257*** 0.151*** ## (0.068) (0.038) ## ## edu 0.001 0.001 ## (0.012) (0.007) ## ## pol 0.307*** 0.182*** ## (0.070) (0.040) ## ## mar 0.585*** 0.311*** ## (0.070) (0.039) ## ## kid -0.343*** -0.166*** ## (0.099) (0.055) ## ## hou 0.202*** 0.112*** ## (0.041) (0.023) ## ## med 0.391*** 0.211*** ## (0.071) (0.040) ## ## end 0.098* 0.051* ## (0.051) (0.029) ## ## -------------------------------------------------- ## Observations 8,178 8,178 8,178 8,178 ## ================================================== ## Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 Code cs=aa %&gt;% filter(hukou==1) %&gt;% dplyr::select(-hukou) nc=aa %&gt;% filter(hukou==0) %&gt;% dplyr::select(-hukou) fo2=paste0(names(cs)[1],&quot;~&quot;,paste0(names(cs)[-1],collapse = &quot;+&quot;)) mod_oglm1=polr(fo2, Hess=TRUE,method = c(&quot;logistic&quot;),data = cs) mod_oglm2=polr(fo2, Hess=TRUE,method = c(&quot;logistic&quot;),data = nc) mod_oprob1=polr(fo2, Hess=TRUE,method = c(&quot;probit&quot;), data = cs) mod_oprob2=polr(fo2,Hess=TRUE,method = c(&quot;probit&quot;),data = nc) summary(mod_oglm1) ## Call: ## polr(formula = fo2, data = cs, Hess = TRUE, method = c(&quot;logistic&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.0417 0.02933 1.42 ## age 0.0222 0.00303 7.35 ## gender -0.2946 0.06769 -4.35 ## health 0.4727 0.03486 13.56 ## ininc 0.3418 0.04356 7.85 ## rel 0.5365 0.10831 4.95 ## edu -0.0161 0.01459 -1.10 ## pol 0.3545 0.08482 4.18 ## mar 0.6178 0.09555 6.47 ## kid -0.3646 0.13381 -2.72 ## hou 0.1231 0.05591 2.20 ## med 0.6453 0.10583 6.10 ## end -0.1286 0.07943 -1.62 ## ## Intercepts: ## Value Std. Error t value ## 1|2 2.473 0.445 5.560 ## 2|3 4.216 0.432 9.752 ## 3|4 5.660 0.435 13.012 ## 4|5 8.692 0.450 19.295 ## ## Residual Deviance: 8146.43 ## AIC: 8180.43 Code summary(mod_oglm2) ## Call: ## polr(formula = fo2, data = nc, Hess = TRUE, method = c(&quot;logistic&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.0691 0.03774 1.831 ## age 0.0254 0.00289 8.806 ## gender -0.3287 0.06345 -5.181 ## health 0.4606 0.02925 15.743 ## ininc 0.1489 0.03233 4.606 ## rel 0.0775 0.08685 0.892 ## edu 0.0273 0.02143 1.273 ## pol 0.2036 0.13000 1.567 ## mar 0.5993 0.10556 5.677 ## kid -0.3142 0.14913 -2.107 ## hou 0.2921 0.06200 4.712 ## med 0.2177 0.10004 2.176 ## end 0.2493 0.06811 3.660 ## ## Intercepts: ## Value Std. Error t value ## 1|2 1.152 0.366 3.146 ## 2|3 2.765 0.359 7.699 ## 3|4 4.035 0.361 11.191 ## 4|5 6.855 0.372 18.446 ## ## Residual Deviance: 10274.95 ## AIC: 10308.95 Code summary(mod_oprob1) ## Call: ## polr(formula = fo2, data = cs, Hess = TRUE, method = c(&quot;probit&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.02584 0.01657 1.56 ## age 0.01221 0.00170 7.19 ## gender -0.16188 0.03806 -4.25 ## health 0.26316 0.01925 13.67 ## ininc 0.18337 0.02403 7.63 ## rel 0.28859 0.05917 4.88 ## edu -0.00845 0.00826 -1.02 ## pol 0.21078 0.04821 4.37 ## mar 0.32942 0.05292 6.22 ## kid -0.18386 0.07499 -2.45 ## hou 0.07199 0.03163 2.28 ## med 0.34230 0.05902 5.80 ## end -0.06990 0.04452 -1.57 ## ## Intercepts: ## Value Std. Error t value ## 1|2 1.430 0.239 5.984 ## 2|3 2.234 0.237 9.415 ## 3|4 3.024 0.239 12.664 ## 4|5 4.820 0.244 19.728 ## ## Residual Deviance: 8153.25 ## AIC: 8187.25 Code summary(mod_oprob2) ## Call: ## polr(formula = fo2, data = nc, Hess = TRUE, method = c(&quot;probit&quot;)) ## ## Coefficients: ## Value Std. Error t value ## internet 0.0441 0.02130 2.07 ## age 0.0144 0.00161 8.94 ## gender -0.1900 0.03605 -5.27 ## health 0.2535 0.01606 15.78 ## ininc 0.0885 0.01834 4.83 ## rel 0.0600 0.04861 1.23 ## edu 0.0166 0.01225 1.35 ## pol 0.1240 0.07476 1.66 ## mar 0.3151 0.05841 5.39 ## kid -0.1441 0.08228 -1.75 ## hou 0.1566 0.03475 4.51 ## med 0.1259 0.05650 2.23 ## end 0.1313 0.03839 3.42 ## ## Intercepts: ## Value Std. Error t value ## 1|2 0.753 0.203 3.706 ## 2|3 1.543 0.203 7.615 ## 3|4 2.263 0.204 11.122 ## 4|5 3.937 0.207 18.986 ## ## Residual Deviance: 10272.32 ## AIC: 10306.32 Code stargazer::stargazer(type=&quot;text&quot;,mod_oglm1,mod_oglm2,mod_oprob1,mod_oprob2, column.labels = c(&quot;城镇&quot;,&quot;农村&quot;,&quot;城镇&quot;,&quot;农村&quot;)) ## ## ==================================================== ## Dependent variable: ## --------------------------------------- ## happiness ## ordered ordered ## logistic probit ## 城镇 农村 城镇 农村 ## (1) (2) (3) (4) ## ---------------------------------------------------- ## internet 0.042 0.069* 0.026 0.044** ## (0.029) (0.038) (0.017) (0.021) ## ## age 0.022*** 0.025*** 0.012*** 0.014*** ## (0.003) (0.003) (0.002) (0.002) ## ## gender -0.295*** -0.329*** -0.162*** -0.190*** ## (0.068) (0.063) (0.038) (0.036) ## ## health 0.473*** 0.461*** 0.263*** 0.253*** ## (0.035) (0.029) (0.019) (0.016) ## ## ininc 0.342*** 0.149*** 0.183*** 0.089*** ## (0.044) (0.032) (0.024) (0.018) ## ## rel 0.536*** 0.077 0.289*** 0.060 ## (0.108) (0.087) (0.059) (0.049) ## ## edu -0.016 0.027 -0.008 0.017 ## (0.015) (0.021) (0.008) (0.012) ## ## pol 0.355*** 0.204 0.211*** 0.124* ## (0.085) (0.130) (0.048) (0.075) ## ## mar 0.618*** 0.599*** 0.329*** 0.315*** ## (0.096) (0.106) (0.053) (0.058) ## ## kid -0.365*** -0.314** -0.184** -0.144* ## (0.134) (0.149) (0.075) (0.082) ## ## hou 0.123** 0.292*** 0.072** 0.157*** ## (0.056) (0.062) (0.032) (0.035) ## ## med 0.645*** 0.218** 0.342*** 0.126** ## (0.106) (0.100) (0.059) (0.057) ## ## end -0.129 0.249*** -0.070 0.131*** ## (0.079) (0.068) (0.045) (0.038) ## ## ---------------------------------------------------- ## Observations 3,789 4,389 3,789 4,389 ## ==================================================== ## Note: *p&lt;0.1; **p&lt;0.05; ***p&lt;0.01 8.2 药物浓度拟合参数方程 Code data=read.table(&#39;data/nd.txt&#39;,header = T) # 1 plot(data$Time,data$Concentration,type=&#39;l&#39;,main=&#39;concentration again time&#39;, xlab=&#39;time&#39;,ylab=&#39;concentration&#39;) points(data$Time,data$Concentration,pch=20,cex=0.5,col=&quot;blue4&quot;) \\[y=log(c)+(b-1)*log(\\frac{x}{a})-(x/a)^b\\] Code # 2 x &lt;- data$Time y &lt;- data$Concentration # Fit the model using nls fit &lt;- nls(y ~ log(c) + (b-1)*log(x/a) - (x/a)^b, start = list(c = 10, a = 2, b = 2)) # Print the estimated parameters summary(fit) ## ## Formula: y ~ log(c) + (b - 1) * log(x/a) - (x/a)^b ## ## Parameters: ## Estimate Std. Error t value Pr(&gt;|t|) ## c 15.4162 1.0988 14.0 &lt;2e-16 *** ## a 9.7896 0.2607 37.6 &lt;2e-16 *** ## b 1.7001 0.0397 42.8 &lt;2e-16 *** ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.297 on 47 degrees of freedom ## ## Number of iterations to convergence: 9 ## Achieved convergence tolerance: 1.19e-06 Code # predict ynew=log(15.41621) + (1.70005-1)*log(x/9.78956) - (x/9.78956)^1.70005 # plot fit plot(x,y,cex=0.6) lines(x,ynew,col=&#39;red&#39;,lwd=1.5) 8.3 多余变量 Code library(haven) library(foreign) library(tidyverse) library(reshape2) library(boot) library(glmnet) FF_wave6_2020v2 &lt;- read_dta(&quot;data/FF_wave6_2020v2.dta&quot;) Code ind=c(&#39;p6b5&#39;,&#39;p6b10&#39;, &#39;p6b35&#39;, &#39;p6b55&#39;, &#39;p6b60&#39;, &#39;p6c21&#39;, &#39;p6f32&#39;, &#39;p6f35&#39;, &#39;p6h74&#39;, &#39;p6h102&#39;, &#39;p6i7&#39;, &#39;p6i8&#39;, &#39;p6i11&#39;, &#39;p6j37&#39;, &#39;k6b21a&#39;, &#39;k6b22a&#39;, &#39;k6c1&#39;, &#39;k6c4e&#39;, &#39;k6c28&#39;, &#39;k6d37&#39;, &#39;k6f63&#39;, &#39;ck6cbmi&#39;, &#39;k6d10&#39;) mydata=FF_wave6_2020v2[,ind] # mydata=lapply(mydata,as.numeric) # mydata=as.data.frame(mydata) mydata[mydata&lt;0]=NA new=na.omit(mydata) dim(new) ## [1] 488 23 Code names(new)[1]=&#39;Depression&#39; new=new %&gt;% mutate(Depression=ifelse(Depression==2,0,1)) 8.3.1 后退法 Code mod_glm1=glm(Depression ~ 1,new,family=&#39;binomial&#39;) model_selected=step(mod_glm1,scope =list(upper=paste0(&#39;~&#39;,paste0(ind[-1],collapse =&quot;+&quot;)),lower=~1) ,trace = F,direction =&quot;forward&quot;) model_selected$coefficients ## (Intercept) p6b55 p6b10 k6b21a ## -4.04029 1.49803 -1.78293 0.74077 ## p6f32 p6c21 p6j37 k6c4e ## -0.59864 0.86352 -0.76027 0.53427 ## ck6cbmi ## 0.04254 Code summary(model_selected) ## ## Call: ## glm(formula = Depression ~ p6b55 + p6b10 + k6b21a + p6f32 + p6c21 + ## p6j37 + k6c4e + ck6cbmi, family = &quot;binomial&quot;, data = new) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.120 -0.408 -0.290 -0.207 3.008 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -4.0403 1.9312 -2.09 0.0364 * ## p6b55 1.4980 0.2533 5.91 3.3e-09 *** ## p6b10 -1.7829 0.4517 -3.95 7.9e-05 *** ## k6b21a 0.7408 0.2337 3.17 0.0015 ** ## p6f32 -0.5986 0.3881 -1.54 0.1229 ## p6c21 0.8635 0.4293 2.01 0.0443 * ## p6j37 -0.7603 0.4258 -1.79 0.0742 . ## k6c4e 0.5343 0.3017 1.77 0.0765 . ## ck6cbmi 0.0425 0.0245 1.74 0.0819 . ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 347.79 on 487 degrees of freedom ## Residual deviance: 253.42 on 479 degrees of freedom ## AIC: 271.4 ## ## Number of Fisher Scoring iterations: 6 Code CI=confint(model_selected) d=CI[CI[,1]&gt;0,] data.frame(name=rownames(d),low=d[,1],upr=d[,2],estimate=rowMeans(d)) %&gt;% group_by(name)%&gt;% ggplot(mapping=aes(y=estimate, x=name)) + geom_point() + geom_errorbar(aes(ymin = low, ymax = upr), width=.4,col=&#39;red&#39;)+ labs(title=&quot;A coefficient greater than zero and its confidence interval&quot;, y=&quot;estimate&quot;, x=&quot;Figure 1: Estimate&quot;) 8.3.2 lasso Code y=as.integer(new[,1]$Depression) x=as.matrix(new[,-1]) f1=glmnet(x,y,family = &#39;binomial&#39;,nlambda = 100,alpha = 1) la=f1$lambda co=f1$beta ll1=as.matrix(co) dim(ll1) ## [1] 22 68 Code colnames(ll1)=log(la) ladat=melt(ll1) ggplot(ladat,aes(x=Var2,y=value,col=Var1))+geom_line()+ labs(title=&quot;lasso&quot;, y=&quot;estimate beta&quot;, x=&quot;log lambda&quot;) Code cvfit=cv.glmnet(x,y) lasso_coef = predict(f1, type = &quot;coefficients&quot;, s = cvfit$lambda.min) lasso_coef ## 23 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## s1 ## (Intercept) -1.94241 ## p6b10 -1.05411 ## p6b35 . ## p6b55 1.13370 ## p6b60 . ## p6c21 . ## p6f32 -0.12648 ## p6f35 . ## p6h74 -0.04463 ## p6h102 . ## p6i7 . ## p6i8 . ## p6i11 . ## p6j37 -0.18554 ## k6b21a 0.40028 ## k6b22a . ## k6c1 . ## k6c4e . ## k6c28 . ## k6d37 . ## k6f63 . ## ck6cbmi . ## k6d10 . The coefficients obtained with the Lasso procedure are similar to the coefficients obtained with the forward procedure, but there are some differences. The Lasso tends to shrink coefficients towards zero, which can result in some coefficients being set to zero even if they were significant in the forward procedure. 8.3.3 偏最小二乘 Code library(tidyverse) library(reshape2) datn=readxl::read_xlsx(&#39;data/pzx.xlsx&#39;) datn$NH=gsub(&quot;,&quot;,&quot;.&quot;,datn$NH) datn$NH=as.numeric(datn$NH) dat=scale(datn) X &lt;- dat[,-1] #对原始数据进行标准化处理 pr.out &lt;- prcomp(X) summary(pr.out) ## Importance of components: ## PC1 PC2 PC3 PC4 PC5 ## Standard deviation 1.644 1.415 0.945 0.8167 0.5646 ## Proportion of Variance 0.386 0.286 0.128 0.0953 0.0455 ## Cumulative Proportion 0.386 0.672 0.800 0.8950 0.9406 ## PC6 PC7 ## Standard deviation 0.4796 0.4314 ## Proportion of Variance 0.0328 0.0266 ## Cumulative Proportion 0.9734 1.0000 Code pr.var &lt;- pr.out$sdev^2 pve &lt;- pr.var/sum(pr.var) cumsum(pve) ## [1] 0.3861 0.6722 0.7998 0.8950 0.9406 0.9734 1.0000 Code par(mfrow = c(1, 2)) plot(pve, xlab = &quot;Principal Component&quot;, ylab = &quot;Proportion of Variance Explained&quot;, ylim = c(0, 1), type = &quot;b&quot;) plot(cumsum(pve), xlab = &quot;Principal Component&quot;, ylab = &quot;Cumulative Proportion of Variance Explained&quot;, ylim = c(0, 1), type = &quot;b&quot;) Code pca=pr.out$rotation %*% diag(pr.out$sdev)#factor loadings Score=pr.out$x Code ##载荷可视化 melt(pca)%&gt;% ggplot(mapping = aes(x =Var2 , y = Var1, fill = value)) + geom_tile() + scale_fill_gradient2(mid=&quot;white&quot;,low = &#39;blue&#39;, high = &#39;red&#39;) + xlab(&#39;components&#39;)+ylab(&#39;Var&#39;) Code pcd_dat=cbind(y=dat[,1],Score[,1:3]) pcd_dat=as.data.frame(pcd_dat) set.seed(123) ind=sample(1:nrow(dat),0.7*nrow(dat)) train=pcd_dat[ind,] test=pcd_dat[-ind,] modpca=lm(y~.,train) ## 对训练数据的拟合程度R2 summary(modpca) ## ## Call: ## lm(formula = y ~ ., data = train) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2.4387 -0.3243 0.0846 0.3825 1.5888 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -0.0015 0.0594 -0.03 0.980 ## PC1 -0.3388 0.0364 -9.31 1.2e-15 *** ## PC2 0.4209 0.0445 9.46 5.4e-16 *** ## PC3 -0.1892 0.0623 -3.04 0.003 ** ## --- ## Signif. codes: ## 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.64 on 113 degrees of freedom ## Multiple R-squared: 0.604, Adjusted R-squared: 0.594 ## F-statistic: 57.5 on 3 and 113 DF, p-value: &lt;2e-16 Code #用于还原数据 sdd=as.vector(sapply(datn,sd)) mean=as.vector(sapply(datn,mean)) coef(modpca) ## (Intercept) PC1 PC2 PC3 ## -0.001503 -0.338799 0.420850 -0.189184 Code par(mfrow=c(2,2)) plot(modpca) Code par(mfrow=c(1,1)) #预测 par(mfrow=c(1,2)) pre1=predict(modpca,test) plot(1:nrow(test),pre1,type=&#39;l&#39;) points(1:nrow(test),pre1) lines(1:nrow(test),test$y,col=2) points(1:nrow(test),test$y,pch=3,col=2) plot(test$y,pre1) abline(0,1,col=2) Code par(mfrow=c(1,1)) #预测残差平方和 sum((pre1-test$y)^2) ## [1] 30.27 Code # RMSE sqrt(sum((pre1-test$y)^2)/nrow(test)) ## [1] 0.7703 Code coe1=pca[,1:3]%*%coef(modpca)[-1]#主成分还原 #标准化还原 pcab=sdd[1]*as.vector(coe1)/sdd[-1] pacb0&lt;-sum(-sdd[1]*coe1*mean[-1]/sdd[-1])+mean[1]+coef(modpca)[1]*sdd[1] c(pacb0,pcab) ## (Intercept) ## -324.45790 1.59843 -0.01102 7.75341 ## ## 0.05608 -1.46149 41.60263 0.05822 Code sum(datn[1,-1]*c(pcab))+pacb0 ## (Intercept) ## 221.6 Code # install.packages(&quot;pls&quot;) library(pls) dat=as.data.frame(dat) train2=dat[ind,] test2=dat[-ind,] pls1 &lt;- plsr(scod~.,data=train2,validation=&#39;LOO&#39;,jackknife=TRUE, method=&#39;widekernelpls&#39;) summary(pls1,what=&#39;all&#39;) ## Data: X dimension: 117 7 ## Y dimension: 117 1 ## Fit method: widekernelpls ## Number of components considered: 7 ## ## VALIDATION: RMSEP ## Cross-validated using 117 leave-one-out segments. ## (Intercept) 1 comps 2 comps 3 comps 4 comps ## CV 1.009 0.6392 0.5881 0.5468 0.5361 ## adjCV 1.009 0.6391 0.5880 0.5467 0.5360 ## 5 comps 6 comps 7 comps ## CV 0.5343 0.5373 0.5378 ## adjCV 0.5341 0.5372 0.5376 ## ## TRAINING: % variance explained ## 1 comps 2 comps 3 comps 4 comps 5 comps ## X 34.20 65.64 76.99 86.97 94.35 ## scod 61.72 68.49 73.72 74.91 75.22 ## 6 comps 7 comps ## X 98.05 100.00 ## scod 75.22 75.22 Code pls3 &lt;- plsr(scod~.,data=dat,ncomp=5,validation=&#39;LOO&#39;,jackknife=TRUE) coef(pls3) ## , , 5 comps ## ## scod ## NH 0.42900 ## flow 0.10748 ## po4 0.46516 ## ss 0.06142 ## temp -0.41347 ## Ph -0.20848 ## cond 0.28241 Code par(mfrow = c(1, 2)) validationplot(pls1, val.type = &#39;MSEP&#39;) validationplot(pls1, val.type = &#39;R2&#39;) Code pre=predict(pls3,test2) summary(pls3) ## Data: X dimension: 168 7 ## Y dimension: 168 1 ## Fit method: kernelpls ## Number of components considered: 5 ## ## VALIDATION: RMSEP ## Cross-validated using 168 leave-one-out segments. ## (Intercept) 1 comps 2 comps 3 comps 4 comps ## CV 1.003 0.672 0.6310 0.6027 0.5918 ## adjCV 1.003 0.672 0.6309 0.6027 0.5917 ## 5 comps ## CV 0.5900 ## adjCV 0.5899 ## ## TRAINING: % variance explained ## 1 comps 2 comps 3 comps 4 comps 5 comps ## X 34.14 60.21 76.09 82.90 92.77 ## scod 56.95 63.08 66.90 68.76 68.92 Code pre[,,5] ## 1 2 3 9 10 ## 1.789077 1.847178 1.439600 0.783259 0.822152 ## 15 18 19 20 28 ## 0.504052 0.287674 0.208961 0.661821 0.120597 ## 29 33 45 48 49 ## -0.330300 -0.003067 -0.420008 -0.604028 0.178544 ## 56 57 58 59 61 ## 2.221033 1.837313 0.356347 0.503241 0.297697 ## 66 70 73 77 80 ## 0.405937 0.286347 -0.220258 0.438075 0.323224 ## 82 85 88 93 96 ## 0.140048 -0.287251 -0.652196 -0.473903 -0.951519 ## 98 100 104 105 110 ## -0.158494 0.592749 0.499284 0.131835 -0.271080 ## 112 113 119 120 122 ## 0.216270 0.189855 0.223635 0.373624 -0.682756 ## 125 127 128 130 136 ## -1.701492 -1.265795 -1.431167 -1.898188 -1.584910 ## 142 147 148 150 155 ## -1.685985 0.520509 0.784047 0.710252 0.069777 ## 162 ## 0.109711 Code par(mfrow=c(1,2)) plot(1:nrow(test),pre[,,5],type=&#39;l&#39;) points(1:nrow(test),pre[,,5]) lines(1:nrow(test),test$y,col=2) points(1:nrow(test),test$y,pch=3,col=2) plot(test$y,pre[,,5]) abline(0,1,col=2) Code par(mfrow=c(1,1)) ## 对预测数据的预测能力 # 残差平方和 sum((pre[,,5]-test2$scod)^2) ## [1] 21.97 Code # RMSE sqrt(sum((pre[,,5]-test2$scod)^2)/nrow(test2)) ## [1] 0.6563 Code # 系数还原 coe=coef(pls3) coe=as.vector(coe) b=sdd[1]*as.vector(coe)/sdd[-1] b0&lt;-sum(-sdd[1]*coe*mean[-1]/sdd[-1])+mean[1] c(b0,b) ## [1] 508.325179 1.409096 0.005195 13.170441 ## [5] 0.011127 -15.633216 -39.297392 0.038004 Code #验证 sum(datn[1,-1]*c(b))+b0 ## [1] 212.7 Code datn[1,1] ## # A tibble: 1 × 1 ## scod ## &lt;dbl&gt; ## 1 212 Code ## 对训练数据的拟合程度 SST=sum((train2$scod-mean(train2$scod))^2) SSE=sum((pls3$residuals[,,5])^2) (SST-SSE)/SST ## [1] 0.5569 "],["sound.html", "A 结尾 A.1 写过的部分课程 A.2 赞助(可怜)", " A 结尾 A.1 写过的部分课程 Code file=list.files(&quot;./www/school&quot;) pngall=paste0(&quot;./www/school/&quot;,file) knitr::include_graphics(pngall) A.2 赞助(可怜) 呐，到这里朕的书差不多写完了，但还有几句话要交待，所以开个附录，再啰嗦几句，各位客官稍安勿躁、扶稳坐好。 "],["references.html", "参考文献", " 参考文献 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
